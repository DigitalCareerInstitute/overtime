{"version":3,"sources":["lib.js","App.js","serviceWorker.js","index.js"],"names":["localStorage","window","renderTime","diff","getHours","getMinutes","getSeconds","defaults","list","preset","weeklyHours","user","delPreset","mode","showSettings","counter","active","start","comment","Totals","props","commitCounterState","setState","push","rec","concat","state","delete","delId","e","filter","_","id","changeWeeklyHours","parseFloat","target","value","changeUser","changeComment","changeMode","toggle","deactivate","activate","timer","setInterval","t","forceUpdate","Date","now","clearInterval","change","addPreset","key","v","JSON","parse","getItem","loadStore","this","setItem","stringify","total","reduce","csv","btoa","p","c","date","toLocaleDateString","renderHours","Container","SettingsModal","show","setShow","InputGroup","Prepend","SettingsButton","map","m","Button","variant","onClick","className","Append","download","href","icon","faDownload","FormControl","placeholder","onChange","faPlus","faSkullCrossbones","row","time","toLocaleTimeString","Comment","width","React","Component","useState","edit","setEdit","faCheck","title","faBusinessTime","Modal","Dialog","Header","Title","Body","Form","Group","Label","name","Footer","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.42bba6f2.chunk.js","sourcesContent":["\nconst { localStorage } = window;\n\nconst renderTime = (diff)=>\n  `${diff.getHours()-1}h:${diff.getMinutes()}m:${diff.getSeconds()}s`\n\nconst loadStore = (defaults) =>\n  JSON.parse(localStorage.getItem('overtime') || 'null') || defaults;\n\nconst saveStore = (state) =>\n  localStorage.setItem('overtime',JSON.stringify(state));\n\nconst renderDate = (date) =>\n  ( new Date(date) ).toLocaleDateString('de-DE')\n\nconst renderHours = (date) =>\n  date / 1000 / 60 / 60\n\nexport { renderTime, renderDate, renderHours, loadStore, saveStore };\n","\nimport React from 'react';\nimport './App.css';\n\nimport {\n  Modal,\n  Form,\n  Button,\n  Container,\n  FormControl,\n  InputGroup\n} from 'react-bootstrap';\n\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome'\n\nimport {\n  faBusinessTime,\n  faCheck,\n  faDownload,\n  faSkullCrossbones,\n  faPlus\n} from '@fortawesome/free-solid-svg-icons'\n\nimport {\n  renderTime,\n  renderDate,\n  renderHours,\n  loadStore,\n  saveStore\n} from './lib'\n\nconst defaults  = {\n  list:[],\n  preset:['Work','Prep','Meet'],\n  weeklyHours: 32,\n  user:'teacher',\n  delPreset:false,\n  mode:'Total',\n  showSettings:false,\n  counter: {\n    active: false,\n    start: null,\n    comment: '' }\n};\n\nclass Totals extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = loadStore(defaults);\n    if ( this.state.counter.active ) this.activate();\n  }\n  commitCounterState = (counter) => {\n    this.setState({counter});\n  }\n  push = (rec)=> {\n    this.setState({list:[rec].concat(this.state.list)});\n  }\n  componentDidUpdate(){\n    saveStore(this.state);\n  }\n  delete = delId => e => {\n    this.setState({\n      list:[...(this.state.list.filter( (_,id)=> id !== delId ))]\n    });\n  }\n  changeWeeklyHours = e =>\n    this.setState({weeklyHours:parseFloat(e.target.value)});\n    changeUser = e =>\n      this.setState({user:e.target.value});\n  changeComment = (id) => e => {\n    const { list } = this.state;\n    list[id][2] = e.target.value;\n    this.setState({list});\n  }\n  changeMode = mode => e => this.setState({mode});\n  toggle = e => this.setState(\n    this.state.active ? this.deactivate() : this.activate()\n  )\n  activate = e => {\n    this.timer = setInterval(t => {\n      this.forceUpdate();\n    },1000);\n    return { active:true, start:Date.now() };\n  }\n  deactivate = e => {\n    clearInterval(this.timer);\n    const diff = Date.now() - this.state.start;\n    this.push([Date.now(),diff,this.state.comment])\n    return { active:false, start:null, comment:'' };\n  }\n  componentWillUnmount(){\n    this.commitCounterState(this.state);\n    clearInterval(this.timer);\n  }\n  change = e => {\n    this.setState({comment:e.target.value});\n    this.state.commitCounterState(this.state);\n  }\n  addPreset = e => this.setState({ preset: [this.state.comment].concat(this.state.preset) })\n  delPreset = e => this.setState({ delPreset: ! this.state.delPreset })\n  preset = key => e =>\n    ! this.state.delPreset\n    ? this.setState({ comment: key })\n    : this.setState({\n      delPreset:false,\n      preset:this.state.preset.filter( v => v !== key )\n    })\n  render(){\n    const total = this.state.list.reduce( (total,rec) => {\n      return total += rec[1];\n    },0);\n    const { showSettings, mode, list, start, active, preset, user, weeklyHours } = this.state;\n    const diff = new Date( Date.now() - start );\n    const csv = `data:text/csv;base64,${btoa(\n      list.reduce((p,c) => {\n        return p += `${renderDate(c[0])},${renderHours(c[1])},${c[2]}\\n`;\n      },'')\n    )}`\n    return (\n      <Container>\n        <SettingsModal\n          show={showSettings}\n          setShow={value => this.setState({showSettings:value})}\n          user={user}\n          changeUser={this.changeUser}\n          weeklyHours={weeklyHours}\n          changeWeeklyHours={this.changeWeeklyHours}\n        />\n        <InputGroup>\n          <InputGroup.Prepend>\n            <SettingsButton\n              show={showSettings}\n              setShow={value => this.setState({showSettings:value})}\n              user={user}\n              changeUser={this.changeUser}\n              weeklyHours={weeklyHours}\n              changeWeeklyHours={this.changeWeeklyHours}\n            />\n            { ['Total','Day','Month','Year'].map( m=>\n            <Button\n              variant={m === mode ? 'warning' : 'primary'}\n              key={m}\n              onClick={this.changeMode(m)}>\n                {m}\n            </Button> )}\n            <span className=\"input-group-text\">\n              {renderTime(new Date(total))}\n            </span>\n          </InputGroup.Prepend>\n          <InputGroup.Append>\n            <a className=\"btn btn-primary\" download={`${user}.csv`} href={csv}>\n            <FontAwesomeIcon icon={faDownload}/>\n            </a>\n          </InputGroup.Append>\n        </InputGroup>\n        <Button onClick={this.toggle} className={ active ? 'trig active' : 'trig' }>\n          { this.state.active ? 'Stop' : 'Start' }\n          <br/>\n          { this.state.start ? renderTime(diff) : null }\n        </Button>\n        <InputGroup>\n          <FormControl\n            placeholder=\"Comment\"\n            onChange={this.change}\n            value={this.state.comment}\n          />\n          <InputGroup.Append>\n            <Button onClick={this.addPreset}>\n              <FontAwesomeIcon icon={faPlus}/>\n            </Button>\n            { preset.map( preset =>\n              <Button key={preset} onClick={this.preset(preset)}>{preset}</Button>\n            )}\n            <Button\n              variant={this.state.delPreset ? 'danger' : 'warning' }\n              onClick={this.delPreset}\n            >\n              <FontAwesomeIcon\n                icon={faSkullCrossbones}\n              />\n            </Button>\n          </InputGroup.Append>\n        </InputGroup>\n        <table className=\"table table-striped\">\n          <tbody>\n            { list.map( (row,id) => {\n              const [date,time,comment] = row;\n              return <tr key={id}>\n                <td>\n                  {(new Date(date).toLocaleDateString('de-DE'))}\n                  &nbsp;\n                  {(new Date(date).toLocaleTimeString('de-DE'))}\n                </td>\n                <td>{renderTime(new Date(time))}</td>\n                <Comment value={comment} changeComment={this.changeComment(id)}/>\n                <td width=\"1\">\n                  <Button variant=\"danger\" onClick={this.delete(id)}>\n                    <FontAwesomeIcon icon={faSkullCrossbones}/>\n                  </Button>\n                </td>\n              </tr>;\n            })}\n          </tbody>\n        </table>\n      </Container>\n    );\n  }\n}\n\nfunction Comment({value,changeComment}){\n  const [edit,setEdit] = React.useState(false)\n  return edit\n    ? <td width=\"99999999\">\n        <InputGroup>\n          <FormControl value={value} onChange={changeComment}/>\n          <InputGroup.Append>\n            <Button onClick={e => setEdit(false)}>\n              <FontAwesomeIcon icon={faCheck}/>\n            </Button>\n          </InputGroup.Append>\n        </InputGroup>\n      </td>\n    : <td width=\"99999999\" onClick={e => setEdit(true)}>{value}</td>\n}\n\nfunction SettingsButton(props){\n  const {show,setShow} = props;\n  return (\n    <Button\n      onClick={e => setShow(!show)}\n      title=\"user / weeklyHours\"\n    >\n      <FontAwesomeIcon icon={faBusinessTime}/> {props.user} / {props.weeklyHours} hrs\n    </Button>\n  )\n};\n\nfunction SettingsModal(props){\n  const {show,setShow} = props;\n  if (!show) return null;\n  return (\n    <Modal.Dialog>\n      <Modal.Header>\n        <Modal.Title>Settings</Modal.Title>\n        <Button variant=\"danger\" className='pull-right'>\n          <FontAwesomeIcon icon={faSkullCrossbones}/>\n          &nbsp;Delete Everything&nbsp;\n          <FontAwesomeIcon icon={faSkullCrossbones}/>\n        </Button>\n\n      </Modal.Header>\n\n      <Modal.Body>\n        <Form.Group>\n          <Form.Label>\n            User Name\n          </Form.Label>\n          <FormControl\n            name=\"user\"\n            value={props.user}\n            onChange={props.changeUser}\n          />\n        </Form.Group>\n          <Form.Group>\n            <Form.Label>\n              Weekly Hours\n            </Form.Label>\n          <InputGroup>\n            <InputGroup.Prepend>\n              <FormControl\n                name=\"weeklyHours\"\n                value={props.weeklyHours}\n                onChange={props.changeWeeklyHours}\n              />\n            </InputGroup.Prepend>\n            <InputGroup.Append>\n              <span className=\"input-group-text\">hrs</span>\n            </InputGroup.Append>\n          </InputGroup>\n        </Form.Group>\n      </Modal.Body>\n\n      <Modal.Footer>\n        <Button onClick={e => setShow(!show)} variant=\"primary\">Save changes</Button>\n      </Modal.Footer>\n    </Modal.Dialog>\n)};\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Totals/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}