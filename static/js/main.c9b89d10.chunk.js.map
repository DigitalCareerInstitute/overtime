{"version":3,"sources":["lib.js","App.js","serviceWorker.js","index.js"],"names":["localStorage","window","recMatchesMode","rec","mode","date","moment","lMode","toLowerCase","modeStart","startOf","valueOf","modeEnd","endOf","isBetween","renderTime","diff","getHours","getMinutes","getSeconds","downloadName","user","replace","purgeStore","e","confirm","removeItem","defaults","list","preset","weeklyHours","delPreset","showSettings","counter","active","start","comment","Totals","props","commitCounterState","setState","push","concat","state","delete","delId","filter","_","id","changeWeeklyHours","parseFloat","target","value","changeUser","changeComment","changeMode","toggle","deactivate","activate","timer","setInterval","t","forceUpdate","Date","now","clearInterval","change","addPreset","key","v","JSON","parse","getItem","loadStore","this","setItem","stringify","total","reduce","csv","btoa","p","c","toLocaleDateString","renderHours","SettingsModal","show","setShow","Container","InputGroup","Prepend","SettingsButton","map","m","Button","variant","onClick","className","Append","download","href","icon","faDownload","FormControl","placeholder","onChange","faPlus","faSkullCrossbones","row","time","toLocaleTimeString","Comment","width","React","Component","useState","edit","setEdit","faCheck","title","faBusinessTime","Modal","Dialog","Header","Title","Body","Form","Group","Label","name","Footer","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c9b89d10.chunk.js","sourcesContent":["\nimport moment from 'moment';\n\nconst { localStorage } = window;\n\nconst recMatchesMode = ( rec, mode ) => {\n  if ( mode === \"Total\" ) return true;\n  const date  = moment(rec[0]), lMode = mode.toLowerCase();\n  const modeStart = moment().startOf(lMode).valueOf();\n  const modeEnd   = moment().endOf(lMode).valueOf();\n  return date.isBetween(modeStart,modeEnd);\n}\n\nconst renderTime = (diff)=>\n  `${diff.getHours()-1}h:${diff.getMinutes()}m:${diff.getSeconds()}s`\n\nconst loadStore = (defaults) =>\n  JSON.parse(localStorage.getItem('overtime') || 'null') || defaults;\n\nconst saveStore = (state) =>\n  localStorage.setItem('overtime',JSON.stringify(state));\n\nconst renderDate = (date) =>\n  ( new Date(date) ).toLocaleDateString('de-DE')\n\nconst renderHours = (date) =>\n  date / 1000 / 60 / 60\n\nconst downloadName = (user,mode) =>\n  `${user.replace(/[^a-zA-Z]+/g,'_')}_${mode.toLowerCase()}.csv`\n\nconst purgeStore = e => {\n  if ( window.confirm(\"ARE YOU REALLY SURE?\") ){\n    localStorage.removeItem('overtime')\n  }}\n\nexport {\n  recMatchesMode,\n  renderTime,\n  renderDate,\n  renderHours,\n  loadStore,\n  saveStore,\n  purgeStore,\n  downloadName\n};\n","\nimport React from 'react';\nimport './App.css';\n\nimport {\n  Modal,\n  Form,\n  Button,\n  Container,\n  FormControl,\n  InputGroup\n} from 'react-bootstrap';\n\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome'\n\nimport {\n  faBusinessTime,\n  faCheck,\n  faDownload,\n  faSkullCrossbones,\n  faPlus\n} from '@fortawesome/free-solid-svg-icons'\n\nimport {\n  recMatchesMode,\n  renderTime,\n  renderDate,\n  renderHours,\n  loadStore,\n  saveStore,\n  purgeStore,\n  downloadName\n} from './lib'\n\nconst defaults  = {\n  list:[],\n  preset:['Work','Prep','Meet'],\n  weeklyHours: 32,\n  user:'teacher',\n  delPreset:false,\n  mode:'Total',\n  showSettings:false,\n  counter: {\n    active: false,\n    start: null,\n    comment: '' }\n};\n\nclass Totals extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = loadStore(defaults);\n    if ( this.state.counter.active ) this.activate();\n  }\n  commitCounterState = (counter) => {\n    this.setState({counter});\n  }\n  push = (rec)=> {\n    this.setState({list:[rec].concat(this.state.list)});\n  }\n  componentDidUpdate(){\n    saveStore(this.state);\n  }\n  delete = delId => e => {\n    this.setState({\n      list:[...(this.state.list.filter( (_,id)=> id !== delId ))]\n    });\n  }\n  changeWeeklyHours = e =>\n    this.setState({weeklyHours:parseFloat(e.target.value)});\n    changeUser = e =>\n      this.setState({user:e.target.value});\n  changeComment = (id) => e => {\n    const { list } = this.state;\n    list[id][2] = e.target.value;\n    this.setState({list});\n  }\n  changeMode = mode => e => this.setState({mode});\n  toggle = e => this.setState(\n    this.state.active ? this.deactivate() : this.activate()\n  )\n  activate = e => {\n    this.timer = setInterval(t => {\n      this.forceUpdate();\n    },1000);\n    return { active:true, start:Date.now() };\n  }\n  deactivate = e => {\n    clearInterval(this.timer);\n    const diff = Date.now() - this.state.start;\n    this.push([Date.now(),diff,this.state.comment])\n    return { active:false, start:null, comment:'' };\n  }\n  componentWillUnmount(){\n    this.commitCounterState(this.state);\n    clearInterval(this.timer);\n  }\n  change = e => {\n    this.setState({comment:e.target.value});\n    this.state.commitCounterState(this.state);\n  }\n  addPreset = e => this.setState({ preset: [this.state.comment].concat(this.state.preset) })\n  delPreset = e => this.setState({ delPreset: ! this.state.delPreset })\n  preset = key => e =>\n    ! this.state.delPreset\n    ? this.setState({ comment: key })\n    : this.setState({\n      delPreset:false,\n      preset:this.state.preset.filter( v => v !== key )\n    })\n  render(){\n    const { showSettings, mode, list, start, active, preset, user, weeklyHours } = this.state;\n    const total = this.state.list.reduce( (total,rec) => {\n      return recMatchesMode(rec,mode) ? total += rec[1] : total;\n    },0);\n    const diff = new Date( Date.now() - start );\n    const csv = `data:text/csv;base64,${btoa(\n      list.filter( rec => recMatchesMode(rec,mode) ).reduce((p,c) => {\n        return p += `${renderDate(c[0])},${renderHours(c[1])},${c[2]}\\n`;\n      },'')\n    )}`\n    if ( showSettings ) return (\n    <SettingsModal\n      show={showSettings}\n      setShow={value => this.setState({showSettings:value})}\n      user={user}\n      changeUser={this.changeUser}\n      weeklyHours={weeklyHours}\n      changeWeeklyHours={this.changeWeeklyHours}\n    /> );\n    return (\n      <Container>\n        <InputGroup>\n          <InputGroup.Prepend>\n            <SettingsButton\n              show={showSettings}\n              setShow={value => this.setState({showSettings:value})}\n              user={user}\n              changeUser={this.changeUser}\n              weeklyHours={weeklyHours}\n              changeWeeklyHours={this.changeWeeklyHours}\n            />\n            { ['Total','Day','Month','Year'].map( m=>\n            <Button\n              variant={m === mode ? 'warning' : 'primary'}\n              key={m}\n              onClick={this.changeMode(m)}>\n                {m}\n            </Button> )}\n            <span className=\"input-group-text\">\n              {renderTime(new Date(total))}\n            </span>\n          </InputGroup.Prepend>\n          <InputGroup.Append>\n            <a className=\"btn btn-primary\" download={downloadName(user,mode)} href={csv}>\n            <FontAwesomeIcon icon={faDownload}/>\n            </a>\n          </InputGroup.Append>\n        </InputGroup>\n        <InputGroup>\n          <FormControl\n            placeholder=\"Comment\"\n            onChange={this.change}\n            value={this.state.comment}\n          />\n          <InputGroup.Append>\n            <Button onClick={this.addPreset}>\n              <FontAwesomeIcon icon={faPlus}/>\n            </Button>\n            { preset.map( preset =>\n              <Button key={preset} onClick={this.preset(preset)}>{preset}</Button>\n            )}\n            <Button\n              variant={this.state.delPreset ? 'danger' : 'warning' }\n              onClick={this.delPreset}\n            >\n              <FontAwesomeIcon\n                icon={faSkullCrossbones}\n              />\n            </Button>\n          </InputGroup.Append>\n        </InputGroup>\n        <Button onClick={this.toggle} className={ active ? 'trig active' : 'trig' }>\n          { this.state.active ? renderTime(diff) : 'Start' }\n        </Button>\n        <table className=\"table table-striped\">\n          <tbody>\n            { list.filter( rec => recMatchesMode(rec,mode) ).map( (row,id) => {\n              const [date,time,comment] = row;\n              return <tr key={id}>\n                <td>\n                  {(new Date(date).toLocaleDateString('de-DE'))}\n                  &nbsp;\n                  {(new Date(date).toLocaleTimeString('de-DE'))}\n                </td>\n                <td>{renderTime(new Date(time))}</td>\n                <Comment value={comment} changeComment={this.changeComment(id)}/>\n                <td width=\"1\">\n                  <Button variant=\"danger\" onClick={this.delete(id)}>\n                    <FontAwesomeIcon icon={faSkullCrossbones}/>\n                  </Button>\n                </td>\n              </tr>;\n            })}\n          </tbody>\n        </table>\n      </Container>\n    );\n  }\n}\n\nfunction Comment({value,changeComment}){\n  const [edit,setEdit] = React.useState(false)\n  return edit\n    ? <td width=\"99999999\">\n        <InputGroup>\n          <FormControl value={value} onChange={changeComment}/>\n          <InputGroup.Append>\n            <Button onClick={e => setEdit(false)}>\n              <FontAwesomeIcon icon={faCheck}/>\n            </Button>\n          </InputGroup.Append>\n        </InputGroup>\n      </td>\n    : <td width=\"99999999\" onClick={e => setEdit(true)}>{value}</td>\n}\n\nfunction SettingsButton(props){\n  const {show,setShow} = props;\n  return (\n    <Button\n      onClick={e => setShow(!show)}\n      title=\"user / weeklyHours\"\n    >\n      <FontAwesomeIcon icon={faBusinessTime}/> {props.user} / {props.weeklyHours} hrs\n    </Button>\n  )\n};\n\nfunction SettingsModal(props){\n  const {show,setShow} = props;\n  if (!show) return null;\n  return (\n    <Modal.Dialog>\n      <Modal.Header>\n        <Modal.Title>Settings</Modal.Title>\n        <Button\n          variant=\"danger\"\n          className='pull-right'\n          onClick={purgeStore}\n        >\n          <FontAwesomeIcon icon={faSkullCrossbones}/>\n          &nbsp;Delete Everything&nbsp;\n          <FontAwesomeIcon icon={faSkullCrossbones}/>\n        </Button>\n\n      </Modal.Header>\n\n      <Modal.Body>\n        <Form.Group>\n          <Form.Label>\n            User Name\n          </Form.Label>\n          <FormControl\n            name=\"user\"\n            value={props.user}\n            onChange={props.changeUser}\n          />\n        </Form.Group>\n          <Form.Group>\n            <Form.Label>\n              Weekly Hours\n            </Form.Label>\n          <InputGroup>\n            <InputGroup.Prepend>\n              <FormControl\n                name=\"weeklyHours\"\n                value={props.weeklyHours}\n                onChange={props.changeWeeklyHours}\n              />\n            </InputGroup.Prepend>\n            <InputGroup.Append>\n              <span className=\"input-group-text\">hrs</span>\n            </InputGroup.Append>\n          </InputGroup>\n        </Form.Group>\n      </Modal.Body>\n\n      <Modal.Footer>\n        <Button onClick={e => setShow(!show)} variant=\"primary\">Save changes</Button>\n      </Modal.Footer>\n    </Modal.Dialog>\n)};\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Totals/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}