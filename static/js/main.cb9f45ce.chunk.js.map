{"version":3,"sources":["serviceWorker.js","lib.js","defaults.js","redux.js","Comment.js","Settings.js","CommentBar.js","List.js","ListControls.js","export.js","MainControls.js","Overtime.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","localStorage","recMatchesMode","rec","mode","date","moment","lMode","toLowerCase","modeStart","startOf","valueOf","modeEnd","endOf","isBetween","recIsntBreak","countBreaks","countBreaksUnder15Minutes","renderDate","Date","toLocaleDateString","renderTotal","to","renderHours","utcOffset","format","downloadName","user","replace","purgeStore","e","confirm","removeItem","defaults","list","preset","workHours","showSettings","active","start","comment","mailToAddress","save","setItem","JSON","stringify","preloadedState","parse","getItem","timerComponent","overtimeActions","dispatch","setTimerComponent","value","type","addRecord","delRecord","index","editRecord","setWorkHours","setMode","setPreset","setUser","setMailToAddress","setComment","addPreset","delPresetId","swapComment","toggle","clearTimer","toggleSettings","toggleCountBreaks","toggleShortBreaks","insertWorkday","overtimeProps","createStore","action","activate","now","timer","setTimer","deactivate","diff","clearInterval","concat","c","setInterval","t","forceUpdate","filter","_","id","slice","parseFloat","delPreset","i","countShortBreaks","sort","a","b","PresetList","connect","React","useState","input","setInput","TextField","label","name","onChange","target","variant","fullWidth","InputProps","endAdornment","InputAdornment","position","IconButton","aria-label","onClick","map","Button","key","className","color","useStyles","makeStyles","theme","menuButton","marginRight","spacing","title","flexGrow","paper","marginBottom","margin","padding","textAlign","palette","text","secondary","classes","AppBar","Toolbar","edge","Typography","noValidate","autoComplete","FormControlLabel","control","Checkbox","checked","display","doDeletePreset","Paper","Autocomplete","freeSolo","options","v","renderInput","params","root","paddingLeft","width","backgroundColor","background","Table","row","time","utcTime","TableRow","TableCell","colSpan","DatePicker","ampm","DateTimePicker","TimePicker","style","Tabs","m","Tab","csv","useMemo","total","Math","max","reduce","btoa","p","toCSV","mailto","encodeURIComponent","toMailURL","href","download","withStyles","props","this","toNow","renderTime","Component","Settings","CommentBar","List","updateLocale","relativeTime","future","past","s","mm","h","hh","d","dd","M","MM","y","yy","themeDark","createMuiTheme","themeLight","ReactDOM","render","store","libInstance","utils","MomentUtils","locale","children","light","setLight","ThemeProvider","CssBaseline","Overtime","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"qLAYMA,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1BC,QAAQC,IACN,iHAKEb,GAAUA,EAAOc,UACnBd,EAAOc,SAAST,KAMlBO,QAAQC,IAAI,sCAGRb,GAAUA,EAAOe,WACnBf,EAAOe,UAAUV,WAO5BW,OAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,M,8LC7FzDC,EAAiBxB,OAAjBwB,aAEFC,EAAiB,SAAEC,EAAKC,GAC5B,GAAc,UAATA,EAAmB,OAAO,EAC/B,IAAMC,EAAQC,IAAOH,EAAI,IAAKI,EAAQH,EAAKI,cACrCC,EAAYH,MAASI,QAAQH,GAAOI,UACpCC,EAAYN,MAASO,MAAMN,GAAOI,UACxC,OAAON,EAAKS,UAAUL,EAAUG,IAG5BG,EAAe,SAAEZ,GAAgE,IAA3Da,EAA0D,wDAAvCC,EAAuC,wDACpF,QAAKD,IACyB,UAAzBb,EAAI,GAAGK,kBACLS,GAA6Bd,EAAI,GAAK,OAczCe,EAAa,SAACb,GAAD,OACf,IAAIc,KAAKd,GAAQe,mBAAmB,UAElCC,EAAc,SAAChB,GAAD,OAClBC,IAAOD,GAAMiB,GAAGhB,IAAO,IAAG,IAEtBiB,EAAc,SAAClB,GAAD,OAClBC,IAAOD,GAAMmB,UAAU,GAAGC,OAAO,UAE7BC,EAAe,SAACC,EAAKvB,GAAN,gBAChBuB,EAAKC,QAAQ,cAAc,KADX,YACmBxB,EAAKI,cADxB,SAGfqB,EAAa,SAAAC,GACZrD,OAAOsD,QAAQ,yBAClB9B,EAAa+B,WAAW,a,kDC5BbC,EAfG,CAChBC,KAAM,GACNC,OAAQ,CAAC,OAAO,OAAO,QACvBC,UAAW,GACXT,KAAM,UACNvB,KAAM,QACNiC,cAAc,EACdC,QAAQ,EACRC,MAAO,KACPC,QAAS,GACTC,cAAe,kCACfzB,aAAa,EACbC,2BAA2B,GCRrBhB,EAAiBxB,OAAjBwB,aAEFyC,EAAO,SAAAjD,GAAK,OAChBQ,EAAa0C,QAAQ,WAAWC,KAAKC,UAAUpD,KAM3CqD,EAHJF,KAAKG,MAAO9C,EAAa+C,QAAQ,aAAe,UAC7Cf,EAIDgB,EAAiB,KAiDRC,EAAkB,SAASC,GAAW,MAAO,CACxDC,kBAAmB,SAASC,GAAcF,EAAS,CAAEG,KAAK,oBAAqBD,WAC/EE,UAAmB,SAASF,GAAcF,EAAS,CAAEG,KAAK,YAAqBD,WAC/EG,UAAmB,SAASC,GAAcN,EAAS,CAAEG,KAAK,YAAqBG,WAC/EC,WAAmB,SAASD,EAAMJ,GAAQF,EAAS,CAAEG,KAAK,aAAqBD,QAAOI,WACtFE,aAAmB,SAASN,GAAcF,EAAS,CAAEG,KAAK,eAAqBD,WAC/EO,QAAmB,SAASP,GAAcF,EAAS,CAAEG,KAAK,UAAqBD,WAC/EQ,UAAmB,SAASR,GAAcF,EAAS,CAAEG,KAAK,YAAqBD,WAC/ES,QAAmB,SAAST,GAAcF,EAAS,CAAEG,KAAK,UAAqBD,WAC/EU,iBAAmB,SAASV,GAAcF,EAAS,CAAEG,KAAK,mBAAqBD,WAC/EW,WAAmB,SAASX,GAAcF,EAAS,CAAEG,KAAK,aAAqBD,WAC/EY,UAAmB,SAASZ,GAAcF,EAAS,CAACG,KAAK,YAAsBD,WAC/Ea,YAAmB,SAAST,GAAcN,EAAS,CAACG,KAAK,cAAsBG,WAC/EU,YAAmB,WAAuBhB,EAAS,CAAEG,KAAK,iBAC1Dc,OAAmB,WAAuBjB,EAAS,CAACG,KAAK,YACzDe,WAAmB,WAAuBlB,EAAS,CAACG,KAAK,gBACzDgB,eAAmB,WAAuBnB,EAAS,CAACG,KAAK,oBACzDiB,kBAAmB,WAAuBpB,EAAS,CAACG,KAAK,uBACzDkB,kBAAmB,WAAuBrB,EAAS,CAACG,KAAK,uBACzDmB,cAAmB,WAAuBtB,EAAS,CAACG,KAAK,qBAG9CoB,EAAgB,SAAAjF,GAAK,OAAIA,GACvBkF,eAtES,WAAuC,IAArClF,EAAoC,uDAA5BqD,EAAiB8B,EAAW,uCACpDtB,EAAuBsB,EAAvBtB,KAAMG,EAAiBmB,EAAjBnB,MAAOJ,EAAUuB,EAAVvB,MADuC,EAEnC5D,EAAjByC,EAFoD,EAEpDA,KAAMI,EAF8C,EAE9CA,OACRuC,EAAW,WACf,MAAO,CACLvC,QAAO,EACPC,MAAMpB,KAAK2D,MACXC,MAAMC,EAAS/B,KAGbgC,EAAa,WAAO,IAAD,EACWxF,EAA1B8C,EADe,EACfA,MAAOC,EADQ,EACRA,QAASuC,EADD,EACCA,MAClBG,EAAO/D,KAAK2D,MAAQvC,EAE1B,OADA4C,cAAcJ,GACP,CACLzC,QAAO,EACPC,MAAMpB,KAAK2D,MACXtC,QAAQ,GACRN,KAAK,CAAC,CAACK,EAAM2C,EAAK1C,IAAU4C,OAAOlD,KAEjC8C,EAAW,SAACK,GAAD,OAAOC,aAAY,SAAAC,GAAOF,EAAEG,gBAAiB,MAC9D,OAAQlC,GACN,IAAK,oBAAqBL,EAAiBI,EAAO,MAClD,IAAK,gBAAqB5D,EAAK,eAAQA,EAAR,CAAeyC,KAAK,CAAC,CAAC5B,MAASI,QAAQ,OAAOC,UAA2B,KAAhBlB,EAAM2C,UAAe,GAAG,GAAG,YAAYgD,OAAOlD,KAAS,MAC/I,IAAK,YAAqBzC,EAAK,eAAQA,EAAR,CAAeyC,KAAK,CAACmB,GAAO+B,OAAOlD,KAAS,MAC3E,IAAK,YAAqBzC,EAAK,eAAQA,EAAR,CAAeyC,KAAK,YAAKA,EAAKuD,QAAQ,SAACC,EAAEC,GAAH,OAASA,IAAOlC,QAAa,MAClG,IAAK,aAAqBvB,EAAKuB,GAASJ,EAAO5D,EAAK,eAAQA,EAAR,CAAeyC,KAAKA,EAAK0D,UAAW,MACxF,IAAK,eAAqBnG,EAAK,eAAQA,EAAR,CAAe2C,UAAUyD,WAAWxC,KAAS,MAC5E,IAAK,UAAqB5D,EAAK,eAAQA,EAAR,CAAeW,KAAKiD,IAAQ,MAC3D,IAAK,YAAqB5D,EAAK,eAAQA,EAAR,CAAe+C,QAAQa,IAAS,MAC/D,IAAK,UAAqB5D,EAAK,eAAQA,EAAR,CAAekC,KAAK0B,IAAQ,MAC3D,IAAK,mBAAqB5D,EAAK,eAAQA,EAAR,CAAegD,cAAcY,IAAQ,MACpE,IAAK,aAAqB5D,EAAK,eAAQA,EAAR,CAAe+C,QAAQa,IAAQ,MAC9D,IAAK,cAAqB,IAAOf,EAAS,OAAO7C,EACvBA,EAAK,eAAQA,EAAR,GAAkBwF,IAAlB,GAAmCJ,KAAc,MAChF,IAAK,SAAqBpF,EAAK,eAAQA,EAAR,GAAmB6C,EAAS2C,IAAeJ,KAAe,MACzF,IAAK,YAAqBpF,EAAK,eAAQA,EAAR,CAAgB0C,OAAQ,CAACkB,GAAO+B,OAAO3F,EAAM0C,UAAW,MACvF,IAAK,cAAqB1C,EAAK,eAAQA,EAAR,CAAgBqG,WAAU,EAAO3D,OAAQ1C,EAAM0C,OAAOsD,QAAQ,SAACC,EAAEK,GAAH,OAASA,IAAMtC,OAAW,MACvH,IAAK,iBAAqBhE,EAAK,eAAQA,EAAR,CAAe4C,cAAgB5C,EAAM4C,eAAgB,MACpF,IAAK,oBAAqB5C,EAAK,eAAQA,EAAR,CAAeuB,aAAevB,EAAMuB,cAAe,MAClF,IAAK,oBAAqBvB,EAAK,eAAQA,EAAR,CAAeuG,kBAAoBvG,EAAMuG,mBAAoB,MAC5F,IAAK,aAAqBb,cAAc1F,EAAMsF,OAGnC,OADbtF,EAAMyC,KAAOzC,EAAMyC,KAAK+D,MAAM,SAACC,EAAEC,GAAH,OAAQA,EAAE,GAAKD,EAAE,MAC/CxD,EAAKjD,GAAeA,KC/CT2G,EAAaC,YACxB3B,EACAxB,EAFwBmD,EAGvB,SAAS,GAET,IADDlE,EACA,EADAA,OAAQ8B,EACR,EADQA,UAAWC,EACnB,EADmBA,YACnB,EACyBoC,IAAMC,SAAS,IADxC,mBACOC,EADP,KACaC,EADb,KAEA,OAAS,oCACP,kBAACC,EAAA,EAAD,CACEC,MAAM,aACNC,KAAK,aACLvD,MAAOmD,EACPK,SAAU,SAAA/E,GAAC,OAAI2E,EAAS3E,EAAEgF,OAAOzD,QACjC0D,QAAQ,WACRC,WAAS,EACTC,WAAY,CACVC,aAAa,kBAACC,EAAA,EAAD,CAAgBC,SAAS,OACpC,kBAACC,EAAA,EAAD,CACEC,aAAW,aACXC,QAAS,SAAAzF,GAAOmC,EAAUuC,GAAQC,EAAS,MAE3C,kBAAC,IAAD,WAKNtE,EAAOqF,KAAK,SAACrF,EAAOwD,GAAR,OACZ,kBAAC8B,EAAA,EAAD,CACEC,IAAK/B,EAAIoB,QAAQ,YAAYY,UAAU,SACvCC,MAAM,YACNL,QAAS,SAAAzF,GAAC,OAAEoC,EAAYyB,KAEvBxD,U,kCCzBH0F,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,WAAY,CACVC,YAAaF,EAAMG,QAAQ,IAE7BC,MAAO,CACLC,SAAU,GAEZC,MAAO,CACL,QAAS,CACPC,aAAcP,EAAMG,QAAQ,IAE9B,aAAc,CACZK,OAAQR,EAAMG,QAAQ,IAExBE,SAAU,EACVI,QAAST,EAAMG,QAAQ,GACvBO,UAAW,SACXb,MAAOG,EAAMW,QAAQC,KAAKC,eAIfvC,eACb3B,EACAxB,EAFamD,EAGZ,YAOA,IAND/B,EAMA,EANAA,eACA3C,EAKA,EALAA,KAAMmC,EAKN,EALMA,QACN1B,EAIA,EAJAA,UAAWuB,EAIX,EAJWA,aACXlB,EAGA,EAHAA,cAAesB,EAGf,EAHeA,iBACf/C,EAEA,EAFAA,YAAauD,EAEb,EAFaA,kBACbyB,EACA,EADAA,iBAAkBxB,EAClB,EADkBA,kBAEZqE,EAAUhB,KAChB,OACE,oCACE,kBAACiB,EAAA,EAAD,CAAQ1B,SAAS,UACf,kBAAC2B,EAAA,EAAD,KACE,kBAAC1B,EAAA,EAAD,CAAY2B,KAAK,QAAQrB,UAAWkB,EAAQb,WAAYJ,MAAM,UAAUN,aAAW,OACjFC,QAASjD,GACT,kBAAC,IAAD,OAEF,kBAAC2E,EAAA,EAAD,CAAYlC,QAAQ,KAAKY,UAAWkB,EAAQV,OAA5C,YAGA,kBAACV,EAAA,EAAD,CAAQG,MAAM,YAAYb,QAAQ,YAAYQ,QAAS1F,GACrD,kBAAC,IAAD,MADF,sBAC6B,kBAAC,IAAD,SAIjC,0BAAM8F,UAAWkB,EAAQR,MAAOa,YAAU,EAACC,aAAa,OACtD,kBAACzC,EAAA,EAAD,CAAWM,WAAS,EAACD,QAAQ,WAAWJ,MAAM,OAAOC,KAAK,OAAOvD,MAAO1B,EAAMkF,SAAU,SAAA/E,GAAC,OAAEgC,EAAQhC,EAAEgF,OAAOzD,UAC5G,kBAACqD,EAAA,EAAD,CAAWM,WAAS,EAACD,QAAQ,WAAWJ,MAAM,eAAeC,KAAK,gBAAgBvD,MAAOZ,EAAeoE,SAAU,SAAA/E,GAAC,OAAEiC,EAAiBjC,EAAEgF,OAAOzD,UAC/I,kBAACqD,EAAA,EAAD,CAAWM,WAAS,EAACD,QAAQ,WAAWJ,MAAM,aAAaC,KAAK,YAAYvD,MAAOjB,EAAWyE,SAAU,SAAA/E,GAAC,OAAE6B,EAAa7B,EAAEgF,OAAOzD,UACjI,kBAAC+F,EAAA,EAAD,CACGC,QACC,kBAACC,EAAA,EAAD,CACCC,QAASvI,EACT6F,SAAUtC,EACVlB,MAAM,gBAERsD,MAAM,iBAER,kBAACyC,EAAA,EAAD,CACEC,QACC,kBAACC,EAAA,EAAD,CACCC,QAASvD,EACTa,SAAUrC,EACVnB,MAAM,qBAERsD,MAAM,kCAET,kBAACP,EAAD,W,yCC5EFyB,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCvB,MAAO,CACL4B,SAAU,EACVI,QAAST,EAAMG,QAAQ,IAEzBG,MAAO,CACLmB,QAAQ,OACRjB,OAAQR,EAAMG,QAAQ,GACtBM,QAAST,EAAMG,QAAQ,GACvBO,UAAW,SACXb,MAAOG,EAAMW,QAAQC,KAAKC,eAIfvC,eACb3B,EACAxB,EAFamD,EAGZ,YAGA,IAFD/D,EAEA,EAFAA,OAAQE,EAER,EAFQA,QAASwB,EAEjB,EAFiBA,WAAYG,EAE7B,EAF6BA,YAC7BhC,EACA,EADAA,OAAmB8B,GACnB,EADQJ,UACR,EADmBI,WAEb4E,GADN,EAD8B/C,UAC9B,EADyC2D,eAEzB5B,MAChB,OAAKvF,EAEL,kBAACoH,GAAA,EAAD,CAAO/B,UAAWkB,EAAQR,OACxB,kBAACsB,GAAA,EAAD,CACEC,UAAQ,EACRjC,UAAWkB,EAAQrC,MACnBb,GAAG,UACHkE,QAAS1H,EACTkB,MAAOb,EACPqE,SAAU,SAAC/E,EAAEgI,GAAH,OAAQ9F,EAAW8F,IAC7BC,YAAc,SAAAC,GAAM,OACpB,kBAACtD,EAAA,EAAD,eACEG,SAAU,SAAA/E,GAAC,OAAIkC,EAAWlC,EAAEgF,OAAOzD,SAC/B2G,OAER,kBAAC3C,EAAA,EAAD,CACEN,QAAQ,YACRO,aAAW,aACXC,QAAS,SAAAzF,GAAC,OAAImC,EAAUzB,KACvB,kBAAC,IAAD,OAEH,kBAAC6E,EAAA,EAAD,CACEN,QAAQ,YACRO,aAAW,aACXC,QAAS,SAAAzF,GAAC,OAAIqC,MACb,kBAAC,KAAD,QAzBgB,Q,gFCjBjB0D,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCkC,KAAM,CACJ,MAAM,CACJ1B,OAAQR,EAAMG,QAAQ,GACtBsB,QAAS,gBAEX,oBAAoB,CAClBU,YAAa,GAEf,sBAAsB,CACpBA,YAAa,GAEfC,MAAO,OACPC,gBAAiBrC,EAAMW,QAAQ2B,WAAWhC,WAI/BhC,eACb3B,EACAxB,EAFamD,EAGZ,SAAS,GAAmD,IAAlDnE,EAAiD,EAAjDA,KAAKC,EAA4C,EAA5CA,OAAO/B,EAAqC,EAArCA,KAAKoD,EAAgC,EAAhCA,UAAUE,EAAsB,EAAtBA,WAAWtB,EAAW,EAAXA,UAC3CyG,EAAUhB,KAChB,OACA,kBAACyC,GAAA,EAAD,CAAO3C,UAAWkB,EAAQoB,MAAM,+BAC9B/H,EACCuD,QAAQ,SAAAtF,GAAG,OAAID,EAAeC,EAAIC,MAClCoH,KAAK,SAAC+C,EAAI5E,GAAQ,IAAD,cACY4E,EADZ,GACTlK,EADS,KACJmK,EADI,KACChI,EADD,KAEZiI,EAAUnK,IAAOkK,GAAMhJ,UAAU,GACrC,MACY,YAAZgB,EACE,kBAACkI,GAAA,EAAD,CAAU/C,UAAU,UAAUD,IAAK/B,GACjC,kBAACgF,GAAA,EAAD,CAAWC,QAAS,GAClB,kBAACC,GAAA,EAAD,CACElD,UAAU,gBACVlG,OAAO,SACP4B,MAAOhD,EACPyK,MAAM,EACNjE,SAAW,SAAAxD,GAAK,OAAIK,EAAWiC,EAAG,CAACtC,EAAM1C,UAAU6J,EAAKhI,OAE1D,2BAAIlC,IAAOD,GAAMoB,OAAO,QAAxB,MAAoCW,EAApC,MAEF,kBAACuI,GAAA,EAAD,KACE,kBAACtD,EAAA,EAAD,CAAYE,QAAS,SAAAzF,GAAC,OAAI0B,EAAUmC,KAClC,kBAAC,KAAD,SAKR,kBAAC+E,GAAA,EAAD,CAAUhD,IAAK/B,GACb,kBAACgF,GAAA,EAAD,KACE,kBAACI,GAAA,EAAD,CACEpD,UAAU,YACVlG,OAAO,mBACP4B,MAAOhD,EACPyK,MAAM,EACNjE,SAAW,SAAAxD,GAAK,OAAIK,EAAWiC,EAAG,CAACtC,EAAM1C,UAAU6J,EAAKhI,OAE1D,kBAACwI,GAAA,EAAD,CACEvJ,OAAO,QACPkG,UAAU,YACVtE,MAAOoH,EAASK,MAAM,EACtBjE,SAAW,SAAAxD,GAAK,OAAIK,EAAWiC,EAAG,CAACtF,EAAKgD,EAAM1C,UAAU6B,QAG5D,kBAACmI,GAAA,EAAD,CAAWM,MAAO,CAAC7C,SAAS,MAC1B,kBAACuB,GAAA,EAAD,CAAcC,UAAQ,EACpBjC,UAAWkB,EAAQrC,MACnBb,GAAG,UACHkE,QAAS1H,EACTkB,MAAOb,EACPqE,SAAW,SAAC/E,EAAEuB,GAAH,OAAaK,EAAWiC,EAAG,CAACtF,EAAKmK,EAAKnH,KACjD0G,YAAa,SAAAC,GAAM,OACnB,kBAACtD,EAAA,EAAD,eACEG,SAAW,SAAA/E,GAAC,OAAI4B,EAAWiC,EAAG,CAACtF,EAAKmK,EAAK1I,EAAEgF,OAAOzD,UAC9C2G,QAGV,kBAACW,GAAA,EAAD,KACE,kBAACtD,EAAA,EAAD,CAAYE,QAAS,SAAAzF,GAAC,OAAI0B,EAAUmC,KAClC,kBAAC,KAAD,iB,oBC7FGU,eACb3B,EACAxB,EAFamD,EAGZ,YAAyC,IAAjBzC,EAAgB,EAAhBA,QAASxD,EAAO,EAAPA,KAAS,OAC3C,kBAAC8K,GAAA,EAAD,CAAMnE,QAAQ,YAAY1D,MAAOjD,EAAMkH,aAAW,qBACjD,CAAC,QAAQ,MAAM,QAAQ,QAAQE,KAAK,SAAA2D,GAAC,OACpC,kBAACC,GAAA,EAAD,CAAK1D,IAAKyD,EAAG5D,QAAU,SAAAzF,GAAC,OAAI8B,EAAQuH,IAAKxE,MAAOwE,EAAG9H,MAAO8H,W,0HC+C9D,IAAMtD,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,WAAY,CAAEC,YAAaF,EAAMG,QAAQ,QAG5B7B,eACb3B,EACAxB,EAFamD,EAIf,SAAS,GAA6D,IAA5DjG,EAA2D,EAA3DA,KAAK8B,EAAsD,EAAtDA,KAAKP,EAAiD,EAAjDA,KAAKc,EAA4C,EAA5CA,cAAczB,EAA8B,EAA9BA,YAAYgF,EAAkB,EAAlBA,iBAC3C6C,EAAUhB,KAEVwD,EAAM/E,IAAMgF,SAChB,kBAxDG,YAAyD,IAAD,mBAAxClL,EAAwC,KAAnC8B,EAAmC,KAA9BlB,EAA8B,KAAlBgF,EAAkB,KACvDuF,EAAQC,KAAKC,IAAI,EAAEvJ,EACxBuD,QAAQ,SAAAtF,GAAG,OAAIY,EAAaZ,EAAIa,EAAYgF,MAC5CP,QAAQ,SAAAtF,GAAG,OAAID,EAAeC,EAAIC,MAClCsL,QAAQ,SAACH,EAAMpL,GAAP,OAAeoL,EAAQpL,EAAI,KAAG,IACvC,MAAM,wBAAN,OAA+BwL,KAC3BzJ,EACC+D,MAAK,SAACC,EAAEC,GAAH,OAAQA,EAAE,GAAGD,EAAE,MACpBT,QAAQ,SAAAtF,GAAG,OAAIY,EAAaZ,EAAIa,EAAYgF,MAC5CP,QAAQ,SAAAtF,GAAG,OAAID,EAAeC,EAAIC,MAClCsL,QAAO,SAACE,EAAEvG,GAAO,IAAD,EACa,CAACnE,EAAWmE,EAAE,IAAI9D,EAAY8D,EAAE,IAAIA,EAAE,IAAtDmF,EADG,KACEhI,EADF,KAEf,OAAOoJ,EAAC,UAFO,KAEP,YAAepB,EAAf,YAAuBhI,EAAvB,QACR,IAPF,gBAOiBjB,EAAYgK,MA2C1BM,CAAM,CAACzL,EAAK8B,EAAKlB,EAAYgF,MAClC,CAAC5F,EAAK8B,EAAKlB,EAAYgF,IAGnB8F,EAASxF,IAAMgF,SACnB,kBA5CG,YAAgF,IAAD,mBAA3DlL,EAA2D,KAAtD8B,EAAsD,KAAjDP,EAAiD,KAA5Cc,EAA4C,KAA9BzB,EAA8B,KAAlBgF,EAAkB,KAC9EuF,EAAQC,KAAKC,IAAI,EAAEvJ,EACxBuD,QAAQ,SAAAtF,GAAG,OAAIY,EAAaZ,EAAIa,EAAYgF,MAC5CP,QAAQ,SAAAtF,GAAG,OAAID,EAAeC,EAAIC,MAClCsL,QAAQ,SAACH,EAAMpL,GAAP,OAAeoL,EAAQpL,EAAI,KAAG,IACvC,MACE,qBAAcsC,GAAd,mBACYsJ,mBAAmB,YAAD,OAAapK,KAD3C,gBAESoK,mBACP,gEAGGpK,EAHH,QAIA,qDACAO,EACC+D,MAAM,SAACC,EAAEC,GAAH,OAAQA,EAAE,GAAGD,EAAE,MACrBT,QAAQ,SAAAtF,GAAG,OAAIY,EAAaZ,EAAIa,EAAYgF,MAC5CP,QAAQ,SAAAtF,GAAG,OAAID,EAAeC,EAAIC,MAClCsL,QAAO,SAACE,EAAEvG,GACT,OAAOuG,EAAC,UAAO1K,EAAWmE,EAAE,IAApB,aAA4B9D,EAAY8D,EAAE,IAA1C,aAAkDA,EAAE,GAApD,QACR,IACF,qDAZA,iBAaU9D,EAAYgK,GAbtB,YAcA,uDAqBGS,CAAU,CAAC5L,EAAK8B,EAAKP,EAAKc,EAAczB,EAAYgF,MACzD,CAAC5F,EAAK8B,EAAKP,EAAKc,EAAczB,EAAYgF,IAG5C,OAAS,oCACT,kBAACqB,EAAA,EAAD,CAAYM,UAAWkB,EAAQb,WAAYiE,KAAMH,EAAQlE,MAAM,UAAUN,aAAW,QAClF,kBAAC,KAAD,OAEF,kBAACD,EAAA,EAAD,CAAYM,UAAWkB,EAAQb,WAAYkE,SAAUxK,EAAaC,EAAKvB,GAAO6L,KAAMZ,EAAKzD,MAAM,UAAUN,aAAW,OAClH,kBAAC,KAAD,WCvDW6E,iBANC,SAAApE,GAAK,MAAK,CACxBkC,KAAM,CAAE7B,SAAU,GAClBJ,WAAY,CAAEC,YAAaF,EAAMG,QAAQ,IACzCC,MAAO,CAAEC,SAAU,MAGN+D,CAAoB9F,YACjC3B,EACAxB,EAFiCmD,CAAA,YAInC,WAAY+F,GAAO,IAAD,6BAChB,4CAAMA,IACNA,EAAMhJ,kBAAN,iBAFgB,EAJiB,sEAQ1B,IAAD,EAGFiJ,KAAKD,MADPb,EAFI,EAEJA,MAAOjJ,EAFH,EAEGA,OAAQ8B,EAFX,EAEWA,OAAQ7B,EAFnB,EAEmBA,MAAOsG,EAF1B,EAE0BA,QAASvE,EAFnC,EAEmCA,eAAgBG,EAFnD,EAEmDA,cAGzD,OACA,kBAACqE,EAAA,EAAD,CAAQ1B,SAAS,UACf,kBAAC2B,EAAA,EAAD,KACE,kBAAC1B,EAAA,EAAD,CAAY2B,KAAK,QAAQrB,UAAWkB,EAAQb,WAAYJ,MAAM,UAAUN,aAAW,OACjFC,QAAUjD,GACV,kBAAC,KAAD,OAEF,kBAAC2E,EAAA,EAAD,CAAYlC,QAAQ,KAAKY,UAAWkB,EAAQV,OACxC7F,EAAM,UTjCG,SAACC,GAAD,OACjBjC,IAAOiC,GAAO+J,OAAM,GSiCTC,CAAWhK,GADR,cACoBlB,EAAYkK,GADhC,KAENlK,EAAYkK,IAEhB,kBAAClE,EAAA,EAAD,CAAYM,UAAWkB,EAAQb,WAAYJ,MAAM,UAAUN,aAAW,OAAOC,QAAS,SAAAzF,GAAC,OAAEsC,MACpF9B,EAAgC,kBAAC,KAAD,MAAvB,kBAAC,KAAD,OAEd,kBAAC+E,EAAA,EAAD,CAAYM,UAAWkB,EAAQb,WAAYJ,MAAM,UAAUN,aAAW,UAAUC,QAAS,SAAAzF,GAAC,OAAE2C,MAC1F,kBAAC,KAAD,OAEF,kBAAC,GAAD,YA/B6B,GAGL6B,IAAMkG,aClBrBnG,eACb3B,EACAxB,EAFamD,CAAA,YAIb,WAAY+F,GAAO,IAAD,6BAChB,4CAAMA,IAGNzM,QAAQC,IAAI,QAJI,EAJL,oFAUWyM,KAAKD,MAAM/H,eAVtB,+BAWJ,IAAD,EACwDgI,KAAKD,MAA5D/J,EADD,EACCA,aAAajC,EADd,EACcA,KAAK8B,EADnB,EACmBA,KAAKlB,EADxB,EACwBA,YAAYgF,EADpC,EACoCA,iBAEpCuF,EAAQC,KAAKC,IAAI,EAAEvJ,EACxBuD,QAAQ,SAAAtF,GAAG,OAAIY,EAAaZ,EAAIa,EAAYgF,MAC5CP,QAAQ,SAAAtF,GAAG,OAAID,EAAeC,EAAIC,MAClCsL,QAAQ,SAACH,EAAMpL,GACd,OAAOD,EAAeC,EAAIC,GAAQmL,EAAQpL,EAAI,GAAKoL,IACnD,IAEF,OAAKlJ,EAAsB,kBAACoK,GAAD,MAElB,oCACP,kBAAC,GAAD,CAAclB,MAAOA,IACrB,kBAACmB,GAAD,MACA,kBAAC,GAAD,MACA,kBAACC,GAAD,WA3BS,GAGErG,IAAMkG,Y,wDCAvBlM,IAAOsM,aAAa,KAAK,CAAEC,aAAe,CACxCC,OAAS,KACTC,KAAO,KACPC,EAAI,MACJ7B,EAAI,KACJ8B,GAAK,MACLC,EAAI,KACJC,GAAK,MACLC,EAAI,KACJC,GAAK,MACLC,EAAI,KACJC,GAAK,MACLC,EAAI,KACNC,GAAK,SAGL,IAAMC,GAAYC,aAAe,CAC/BjF,QAAS,CAAEpF,KAAM,UAGbsK,GAAaD,aAAe,CAChCjF,QAAS,CAAEpF,KAAM,WAanBuK,IAASC,OACL,kBAAC,IAAD,CAAUC,MAAOA,GACf,kBAAC,KAAD,CAAyBC,YAAa1N,IAAQ2N,MAAOC,KAAaC,OAAQ,MACxE,mBAbR,YAAmC,IAAXC,EAAU,EAAVA,SAAU,EACP9H,IAAMC,UAAS,GADR,mBACzB8H,EADyB,KACnBC,EADmB,KAGhC,OADA7P,OAAO6P,SAAWA,EAEhB,kBAACC,GAAA,EAAD,CAAexG,MAAOsG,EAAQT,GAAaF,IACxCU,KAQC,KACE,kBAACI,GAAA,EAAD,MACA,kBAACC,GAAD,SAILC,SAASC,eAAe,SZ1CtB,SAAkB5P,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAI4P,IAAIC,YAAwBpQ,OAAOC,SAASuN,MACpD6C,SAAWrQ,OAAOC,SAASoQ,OAIvC,OAGFrQ,OAAOsQ,iBAAiB,QAAQ,WAC9B,IAAMjQ,EAAK,UAAM+P,YAAN,sBAEPtQ,IAgEV,SAAiCO,EAAOC,GAEtCiQ,MAAMlQ,EAAO,CACXmQ,QAAS,CAAE,iBAAkB,YAE5B9P,MAAK,SAAA+P,GAEJ,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5CtQ,UAAUC,cAAcsQ,MAAMpQ,MAAK,SAAAC,GACjCA,EAAaoQ,aAAarQ,MAAK,WAC7BV,OAAOC,SAAS+Q,eAKpB5Q,EAAgBC,EAAOC,MAG1BgB,OAAM,WACLJ,QAAQC,IACN,oEAvFA8P,CAAwB5Q,EAAOC,GAI/BC,UAAUC,cAAcsQ,MAAMpQ,MAAK,WACjCQ,QAAQC,IACN,iHAMJf,EAAgBC,EAAOC,OYgB/BE,K","file":"static/js/main.cb9f45ce.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\nimport moment from 'moment';\n\nconst { localStorage } = window;\n\nconst recMatchesMode = ( rec, mode ) => {\n  if ( mode === \"Total\" ) return true;\n  const date  = moment(rec[0]), lMode = mode.toLowerCase();\n  const modeStart = moment().startOf(lMode).valueOf();\n  const modeEnd   = moment().endOf(lMode).valueOf();\n  return date.isBetween(modeStart,modeEnd);\n}\n\nconst recIsntBreak = ( rec, countBreaks=false, countBreaksUnder15Minutes = false ) => {\n  if ( countBreaks ) return true;\n  if ( rec[2].toLowerCase() === 'break' ){\n    if ( countBreaksUnder15Minutes && rec[1] < 1000 * 60 * 15 ) return true;\n    return false;\n  } return true;\n}\n\nconst renderTime = (start)=>\n  moment(start).toNow(true)\n\nconst loadStore = (defaults) =>\n  JSON.parse(localStorage.getItem('overtime') || 'null') || defaults;\n\nconst saveStore = (state) =>\n  localStorage.setItem('overtime',JSON.stringify(state));\n\nconst renderDate = (date) =>\n  ( new Date(date) ).toLocaleDateString('de-DE')\n\nconst renderTotal = (date) =>\n  moment(date).to(moment(0),true)\n\nconst renderHours = (date) =>\n  moment(date).utcOffset(0).format('HH:mm')\n\nconst downloadName = (user,mode) =>\n  `${user.replace(/[^a-zA-Z]+/g,'_')}_${mode.toLowerCase()}.csv`\n\nconst purgeStore = e => {\n  if ( window.confirm(\"ARE YOU REALLY SURE?\") ){\n    localStorage.removeItem('overtime')\n  }}\n\nexport {\n  recIsntBreak,\n  recMatchesMode,\n  renderTime,\n  renderDate,\n  renderHours,\n  loadStore,\n  saveStore,\n  renderTotal,\n  purgeStore,\n  downloadName\n};\n","\nconst defaults  = {\n  list: [],\n  preset: ['Work','Prep','Meet'],\n  workHours: 32,\n  user: 'teacher',\n  mode: 'Total',\n  showSettings: false,\n  active: false,\n  start: null,\n  comment: '',\n  mailToAddress: 'boss@digitalcareerinstitute.org',\n  countBreaks: false,\n  countBreaksUnder15Minutes: false\n};\n\nexport default defaults;\n","\nimport { createStore } from 'redux'\nimport moment          from 'moment'\nimport defaults        from \"./defaults\"\n\nconst { localStorage } = window;\n\nconst save = state =>\n  localStorage.setItem('overtime',JSON.stringify(state));\n\nconst load = () =>\n  JSON.parse( localStorage.getItem('overtime') || 'false' )\n  || defaults;\n\nconst preloadedState = load();\n\nlet timerComponent = null;\n\nconst overtimeReducer = ( state = preloadedState , action )=> {\n  const { type, index, value } = action;\n  const { list, active } = state;\n  const activate = function() {\n    return {\n      active:true,\n      start:Date.now(),\n      timer:setTimer(timerComponent)\n    }\n  }\n  const deactivate = () => {\n    const { start, comment, timer } = state;\n    const diff = Date.now() - start;\n    clearInterval(timer);\n    return {\n      active:false,\n      start:Date.now(),\n      comment:'',\n      list:[[start,diff,comment]].concat(list) };\n  }\n  const setTimer = (c) => setInterval(t => { c.forceUpdate() }, 1000 );\n  switch (type) {\n    case 'setTimerComponent': timerComponent = value; break;\n    case 'insertWorkday':     state = { ...state, list:[[moment().startOf('day').valueOf(),-state.workHours*1000*60*60,'Workday']].concat(list) }; break;\n    case 'addRecord':         state = { ...state, list:[value].concat(list) }; break;\n    case 'delRecord':         state = { ...state, list:[...(list.filter( (_,id)=> id !== index ))] }; break;\n    case 'editRecord':        list[index] = value; state = { ...state, list:list.slice() }; break;\n    case 'setWorkHours':      state = { ...state, workHours:parseFloat(value)}; break;\n    case 'setMode':           state = { ...state, mode:value}; break;\n    case 'setPreset':         state = { ...state, comment:value }; break;\n    case 'setUser':           state = { ...state, user:value}; break;\n    case 'setMailToAddress':  state = { ...state, mailToAddress:value}; break;\n    case 'setComment':        state = { ...state, comment:value}; break;\n    case 'swapComment':       if ( ! active ) return state;\n                              state = { ...state, ...deactivate(), ...activate() }; break;\n    case 'toggle':            state = { ...state, ...(active ? deactivate() : activate()) }; break;\n    case 'addPreset':         state = { ...state,  preset: [value].concat(state.preset) }; break;\n    case 'delPresetId':       state = { ...state,  delPreset:false, preset: state.preset.filter( (_,i) => i !== index ) }; break;\n    case 'toggleSettings':    state = { ...state, showSettings: ! state.showSettings }; break;\n    case 'toggleCountBreaks': state = { ...state, countBreaks: ! state.countBreaks }; break;\n    case 'toggleShortBreaks': state = { ...state, countShortBreaks: ! state.countShortBreaks }; break;\n    case 'clearTimer':        clearInterval(state.timer); break;\n    default: break; }\n  state.list = state.list.sort( (a,b)=> b[0] - a[0] );\n  save(state); return state;\n}\n\nexport const overtimeActions = function(dispatch){ return {\n  setTimerComponent: function(value){       dispatch({ type:'setTimerComponent', value        }); },\n  addRecord:         function(value){       dispatch({ type:'addRecord',         value        }); },\n  delRecord:         function(index){       dispatch({ type:'delRecord',         index        }); },\n  editRecord:        function(index,value){ dispatch({ type:'editRecord',        value, index }); },\n  setWorkHours:      function(value){       dispatch({ type:'setWorkHours',      value        }); },\n  setMode:           function(value){       dispatch({ type:'setMode',           value        }); },\n  setPreset:         function(value){       dispatch({ type:'setPreset',         value        }); },\n  setUser:           function(value){       dispatch({ type:'setUser',           value        }); },\n  setMailToAddress:  function(value){       dispatch({ type:'setMailToAddress',  value        }); },\n  setComment:        function(value){       dispatch({ type:'setComment',        value        }); },\n  addPreset:         function(value){       dispatch({type:'addPreset',          value        }); },\n  delPresetId:       function(index){       dispatch({type:'delPresetId',        index        }); },\n  swapComment:       function(){            dispatch({ type:'swapComment'                     }); },\n  toggle:            function(){            dispatch({type:'toggle',                          }); },\n  clearTimer:        function(){            dispatch({type:'clearTimer',                      }); },\n  toggleSettings:    function(){            dispatch({type:'toggleSettings',                  }); },\n  toggleCountBreaks: function(){            dispatch({type:'toggleCountBreaks',               }); },\n  toggleShortBreaks: function(){            dispatch({type:'toggleShortBreaks',               }); },\n  insertWorkday:     function(){            dispatch({type:'insertWorkday',                   }); }\n}};\n\nexport const overtimeProps = state => state\nexport default createStore( overtimeReducer );\n","\nimport React from 'react';\n\nimport InputAdornment       from '@material-ui/core/InputAdornment';\nimport IconButton           from '@material-ui/core/IconButton';\nimport TextField            from '@material-ui/core/TextField';\nimport Button               from '@material-ui/core/Button';\nimport AddCircleOutline     from '@material-ui/icons/AddCircleOutline';\n\nimport { connect }          from 'react-redux';\nimport {\n  overtimeProps,\n  overtimeActions\n} from './redux'\n\nexport const PresetList = connect(\n  overtimeProps,\n  overtimeActions\n)( function({\n  preset, addPreset, delPresetId\n}){\n  const [input,setInput] = React.useState('');\n  return ( <>\n    <TextField\n      label=\"Add Preset\"\n      name=\"addComment\"\n      value={input}\n      onChange={e => setInput(e.target.value)}\n      variant=\"outlined\"\n      fullWidth\n      InputProps={{\n        endAdornment:<InputAdornment position=\"end\">\n          <IconButton\n            aria-label=\"add preset\"\n            onClick={e => { addPreset(input); setInput('') } }\n          >\n            <AddCircleOutline/>\n          </IconButton>\n        </InputAdornment>\n      }}\n    />\n    { preset.map( (preset,id) =>\n      <Button\n        key={id} variant=\"contained\" className=\"preset\"\n        color=\"secondary\"\n        onClick={e=>delPresetId(id)}\n      >\n        {preset}\n      </Button>\n    )}\n</> )});\n","\nimport React from 'react';\n\nimport {\n  Button, TextField, Typography, AppBar,Toolbar, IconButton, makeStyles,\n  FormControlLabel, Checkbox\n} from '@material-ui/core';\n\nimport {\n  purgeStore\n} from './lib'\n\nimport { PresetList } from './Comment'\nimport Close          from '@material-ui/icons/Close';\nimport Error          from '@material-ui/icons/Error';\nimport { connect }    from 'react-redux';\n\nimport {\n  overtimeProps,\n  overtimeActions\n} from './redux'\n\nconst useStyles = makeStyles(theme => ({\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  paper: {\n    '& > *': {\n      marginBottom: theme.spacing(2),\n    },\n    '& > button': {\n      margin: theme.spacing(1),\n    },\n    flexGrow: 1,\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  }\n}));\n\nexport default connect(\n  overtimeProps,\n  overtimeActions\n)( function SettingsModal({\n  toggleSettings,\n  user, setUser,\n  workHours, setWorkHours,\n  mailToAddress, setMailToAddress,\n  countBreaks, toggleCountBreaks,\n  countShortBreaks, toggleShortBreaks,\n}){\n  const classes = useStyles();\n  return (\n    <>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\"\n            onClick={toggleSettings}>\n            <Close/>\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Settings\n          </Typography>\n          <Button color=\"secondary\" variant=\"contained\" onClick={purgeStore}>\n            <Error/> Delete Everything <Error/>\n          </Button>\n        </Toolbar>\n      </AppBar>\n      <form className={classes.paper} noValidate autoComplete=\"off\">\n        <TextField fullWidth variant=\"outlined\" label=\"User\" name=\"user\" value={user} onChange={e=>setUser(e.target.value)}/>\n        <TextField fullWidth variant=\"outlined\" label=\"eMail Target\" name=\"mailToAddress\" value={mailToAddress} onChange={e=>setMailToAddress(e.target.value)}/>\n        <TextField fullWidth variant=\"outlined\" label=\"Work Hours\" name=\"workHours\" value={workHours} onChange={e=>setWorkHours(e.target.value)}/>\n        <FormControlLabel\n           control={\n            <Checkbox\n             checked={countBreaks}\n             onChange={toggleCountBreaks}\n             value=\"countBreaks\"\n            />}\n           label=\"Count Breaks\"\n         />\n         <FormControlLabel\n           control={\n            <Checkbox\n             checked={countShortBreaks}\n             onChange={toggleShortBreaks}\n             value=\"countShortBreaks\"\n            />}\n           label=\"Count Breaks Under 15 Minutes\"\n         />\n        <PresetList/>\n      </form>\n    </>\n)});\n","\nimport React from 'react';\n\nimport IconButton           from '@material-ui/core/IconButton';\nimport TextField            from '@material-ui/core/TextField';\nimport Paper                from '@material-ui/core/Paper';\nimport Autocomplete         from '@material-ui/lab/Autocomplete';\nimport AddCircleOutline     from '@material-ui/icons/AddCircleOutline';\nimport SwapHorizontalCircle from '@material-ui/icons/SwapHorizontalCircle';\nimport { makeStyles }       from '@material-ui/core/styles';\n\nimport { connect }          from 'react-redux';\nimport {\n  overtimeProps,\n  overtimeActions\n} from './redux'\n\nconst useStyles = makeStyles(theme => ({\n  input: {\n    flexGrow: 1,\n    padding: theme.spacing(1),\n  },\n  paper: {\n    display:'flex',\n    margin: theme.spacing(1),\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport default connect(\n  overtimeProps,\n  overtimeActions\n)( function ({\n  active, comment, setComment, swapComment,\n  preset, setPreset, addPreset, delPreset, doDeletePreset\n}){\n  const classes = useStyles();\n  if( !active ) return null;\n  return (\n  <Paper className={classes.paper}>\n    <Autocomplete\n      freeSolo\n      className={classes.input}\n      id=\"comment\"\n      options={preset}\n      value={comment}\n      onChange={(e,v)=> setComment(v)}\n      renderInput={ params =>\n      <TextField\n        onChange={e => setComment(e.target.value)}\n        {...params}\n    />}/>\n    <IconButton\n      variant=\"contained\"\n      aria-label=\"add preset\"\n      onClick={e => addPreset(comment)}\n      ><AddCircleOutline/>\n    </IconButton>\n    <IconButton\n      variant=\"contained\"\n      aria-label=\"add preset\"\n      onClick={e => swapComment()}\n      ><SwapHorizontalCircle/>\n    </IconButton>\n  </Paper>\n)});\n","\nimport React                            from 'react';\n\nimport { makeStyles }                   from '@material-ui/core/styles';\nimport Table                            from '@material-ui/core/Table';\nimport TableRow                         from '@material-ui/core/TableRow';\nimport TableCell                        from '@material-ui/core/TableCell';\nimport IconButton                       from '@material-ui/core/IconButton';\nimport Autocomplete                     from '@material-ui/lab/Autocomplete';\nimport HighlightOff                     from '@material-ui/icons/HighlightOff';\n\nimport { TextField, }                   from '@material-ui/core';\nimport { DateTimePicker, TimePicker, DatePicker }   from '@material-ui/pickers';\nimport { recMatchesMode }               from './lib'\nimport moment                           from 'moment'\n\nimport { connect }                      from 'react-redux';\nimport {\n  overtimeProps,\n  overtimeActions\n} from './redux'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& b':{\n      margin: theme.spacing(1),\n      display: 'inline-block'\n    },\n    '& td:last-of-type':{\n      paddingLeft: 0\n    },\n    '& td:nth-of-type(2)':{\n      paddingLeft: 0\n    },\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default connect(\n  overtimeProps,\n  overtimeActions\n)( function({list,preset,mode,delRecord,editRecord,workHours}){\n  const classes = useStyles();\n  return (\n  <Table className={classes.root}><tbody>{\n    list\n    .filter( rec => recMatchesMode(rec,mode) )\n    .map( (row,id) => {\n      const [date,time,comment] = row;\n      let utcTime = moment(time).utcOffset(0)\n      return (\n      comment === 'Workday'\n      ? <TableRow className=\"workday\" key={id}>\n          <TableCell colSpan={2}>\n            <DatePicker\n              className=\"list-date day\"\n              format=\"DD.MM.\"\n              value={date}\n              ampm={false}\n              onChange={ value => editRecord(id,[value.valueOf(),time,comment])}\n            />\n            <b>{moment(date).format('dddd')} / {workHours}h</b>\n          </TableCell>\n          <TableCell>\n            <IconButton onClick={e => delRecord(id)}>\n              <HighlightOff/>\n            </IconButton>\n          </TableCell>\n        </TableRow>\n      :\n      <TableRow key={id}>\n        <TableCell>\n          <DateTimePicker\n            className=\"list-date\"\n            format=\"DD.MM.YYYY HH:mm\"\n            value={date}\n            ampm={false}\n            onChange={ value => editRecord(id,[value.valueOf(),time,comment])}\n          />\n          <TimePicker\n            format=\"HH:mm\"\n            className=\"list-time\"\n            value={utcTime} ampm={false}\n            onChange={ value => editRecord(id,[date,value.valueOf(),comment])}\n          />\n        </TableCell>\n        <TableCell style={{flexGrow:'1'}}>\n          <Autocomplete freeSolo\n            className={classes.input}\n            id=\"comment\"\n            options={preset}\n            value={comment}\n            onChange={ (e,value) => editRecord(id,[date,time,value])}\n            renderInput={params =>\n            <TextField\n              onChange={ e => editRecord(id,[date,time,e.target.value])}\n              {...params}\n          />}/>\n        </TableCell>\n        <TableCell>\n          <IconButton onClick={e => delRecord(id)}>\n            <HighlightOff/>\n          </IconButton>\n        </TableCell>\n      </TableRow> )})}\n  </tbody></Table>\n)});\n","\nimport React         from 'react';\nimport { Tab, Tabs } from '@material-ui/core';\nimport { connect }   from 'react-redux';\nimport {\n  overtimeProps,\n  overtimeActions\n} from './redux'\n\nexport default connect(\n  overtimeProps,\n  overtimeActions\n)( function ListControls({ setMode, mode }){ return (\n  <Tabs variant=\"fullWidth\" value={mode} aria-label=\"select date range\">\n  {['Total','Day','Month','Year'].map( m =>\n    <Tab key={m} onClick={ e => setMode(m) } label={m} value={m}/>)}\n  </Tabs>\n)});\n","\nimport React from 'react';\n\nimport { IconButton, makeStyles } from '@material-ui/core';\nimport { downloadName } from './lib'\nimport CoudDownload     from '@material-ui/icons/CloudDownload';\nimport Mail             from '@material-ui/icons/Mail';\nimport { connect }      from 'react-redux';\n\nimport {\n  overtimeProps,\n  overtimeActions\n} from './redux'\n\nimport {\n  renderDate, renderHours, recMatchesMode, recIsntBreak\n} from './lib'\n\nexport function toCSV([mode,list,countBreaks,countShortBreaks]){\n  const total = Math.max(0,list\n  .filter( rec => recIsntBreak(rec,countBreaks,countShortBreaks) )\n  .filter( rec => recMatchesMode(rec,mode) )\n  .reduce( (total,rec) => total + rec[1],0));\n  return `data:text/csv;base64,${btoa(\n      list\n      .sort((a,b)=> b[0]-a[0])\n      .filter( rec => recIsntBreak(rec,countBreaks,countShortBreaks) )\n      .filter( rec => recMatchesMode(rec,mode) )\n      .reduce((p,c) => {\n        const [date,time,comment] = [renderDate(c[0]),renderHours(c[1]),c[2]];\n        return p += `${date},${time},${comment}\\n`;\n      },'') + `total,${renderHours(total)}`\n    )}`;\n};\n\nexport function toMailURL([mode,list,user,mailToAddress,countBreaks,countShortBreaks]){\n  const total = Math.max(0,list\n  .filter( rec => recIsntBreak(rec,countBreaks,countShortBreaks) )\n  .filter( rec => recMatchesMode(rec,mode) )\n  .reduce( (total,rec) => total + rec[1],0));\n  return (\n    `mailto:?to=${mailToAddress}` +\n    `&subject=${encodeURIComponent(`Overtime ${user}`)}` +\n    `&body=${encodeURIComponent(\n      \"Hi,\\n\" +\n      \"this is my overtime report,\\n\\n\" +\n      \"Best regards,\\n\" +\n      `${user}\\n\\n` +\n      \"------------------------------------------------\\n\" +\n      list\n      .sort( (a,b)=> b[0]-a[0] )\n      .filter( rec => recIsntBreak(rec,countBreaks,countShortBreaks) )\n      .filter( rec => recMatchesMode(rec,mode) )\n      .reduce((p,c) => {\n        return p += `${renderDate(c[0])}\\t${renderHours(c[1])}\\t${c[2]}\\n`;\n      },'') +\n      \"------------------------------------------------\\n\" +\n      `Total: ${renderHours(total)} hours\\n` +\n      \"------------------------------------------------\\n\"\n    )}`\n)};\n\nconst useStyles = makeStyles(theme => ({\n  menuButton: { marginRight: theme.spacing(2) },\n}));\n\nexport default connect(\n  overtimeProps,\n  overtimeActions\n)(\nfunction({mode,list,user,mailToAddress,countBreaks,countShortBreaks}){\n  const classes = useStyles();\n\n  const csv = React.useMemo (\n    ()=> toCSV([mode,list,countBreaks,countShortBreaks]),\n    [mode,list,countBreaks,countShortBreaks]\n  );\n\n  const mailto = React.useMemo (\n    ()=> toMailURL([mode,list,user,mailToAddress,countBreaks,countShortBreaks]),\n    [mode,list,user,mailToAddress,countBreaks,countShortBreaks]\n  );\n\n  return ( <>\n  <IconButton className={classes.menuButton} href={mailto} color=\"inherit\" aria-label=\"mail\">\n    <Mail/>\n  </IconButton>\n  <IconButton className={classes.menuButton} download={downloadName(user,mode)} href={csv} color=\"inherit\" aria-label=\"csv\">\n    <CoudDownload/>\n  </IconButton>\n  </> );\n})\n","\nimport React from 'react';\n\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  IconButton,\n  withStyles\n} from '@material-ui/core';\n\nimport { renderTotal, renderTime } from './lib'\n\nimport Menu                 from '@material-ui/icons/Menu';\nimport PlayCircleOutline    from '@material-ui/icons/PlayCircleOutline';\nimport HighlightOff         from '@material-ui/icons/HighlightOff';\nimport Star                 from '@material-ui/icons/Star';\nimport StarHalf             from '@material-ui/icons/StarHalf';\n\nimport ExportButtons        from './export'\n\nimport { connect }          from 'react-redux';\nimport {\n  overtimeProps,\n  overtimeActions\n} from './redux'\n\nconst classes = theme => ({\n  root: { flexGrow: 1 },\n  menuButton: { marginRight: theme.spacing(2) },\n  title: { flexGrow: 1, },\n});\n\nexport default withStyles(classes)(connect(\n  overtimeProps,\n  overtimeActions\n)( class MainControls extends React.Component {\nconstructor(props){\n  super(props);\n  props.setTimerComponent(this);\n}\nrender(){\n  const {\n    total, active, toggle, start, classes, toggleSettings, insertWorkday\n  } = this.props;\n\n  return (\n  <AppBar position=\"static\">\n    <Toolbar>\n      <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\"\n        onClick={ toggleSettings }>\n        <Menu/>\n      </IconButton>\n      <Typography variant=\"h6\" className={classes.title}>\n        { active\n        ? `${renderTime(start)} / ${renderTotal(total)} `\n        : renderTotal(total) }\n      </Typography>\n      <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"mail\" onClick={e=>toggle()}>\n        { !active ? <PlayCircleOutline/> : <HighlightOff/> }\n      </IconButton>\n      <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"workday\" onClick={e=>insertWorkday()}>\n        <Star/>\n      </IconButton>\n      <ExportButtons/>\n    </Toolbar>\n  </AppBar>\n)}}));\n","\nimport React              from 'react';\nimport SettingsModal      from './Settings'\nimport CommentBar         from './CommentBar'\nimport List               from './List'\nimport ListControls       from './ListControls'\nimport MainControls       from './MainControls'\nimport {\n  recMatchesMode,\n  recIsntBreak\n} from './lib'\n\nimport { connect }        from 'react-redux';\nimport {\n  overtimeProps,\n  overtimeActions\n} from './redux'\n\nexport default connect(\n  overtimeProps,\n  overtimeActions\n)( class extends React.Component {\n  constructor(props){\n    super(props);\n    // this.state = loadStore(defaults);\n    // if ( this.state.active ) this.setTimer()\n    console.log('init');\n  }\n  componentWillUnmount(){ this.props.clearTimer() }\n  render(){\n    const {showSettings,mode,list,countBreaks,countShortBreaks} = this.props;\n\n    const total = Math.max(0,list\n    .filter( rec => recIsntBreak(rec,countBreaks,countShortBreaks) )\n    .filter( rec => recMatchesMode(rec,mode) )\n    .reduce( (total,rec) => {\n      return recMatchesMode(rec,mode) ? total + rec[1] : total;\n    },0));\n\n    if ( showSettings ) return <SettingsModal/>;\n\n    return ( <>\n      <MainControls total={total}/>\n      <CommentBar/>\n      <ListControls/>\n      <List/>\n    </> );\n  }\n});\n","\nimport * as serviceWorker from './serviceWorker';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\n\nimport './index.css';\n\nimport Overtime from './Overtime';\nimport store from './redux'\n\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport MomentUtils from '@date-io/moment'\n\nimport moment from 'moment';\nimport 'moment/locale/de';\n\nmoment.updateLocale('de',{ relativeTime : {\n  future : '%s',\n  past : '%s',\n  s : '>1m',\n  m : '1m',\n  mm : '%dm',\n  h : '1h',\n  hh : '%dh',\n  d : '1d',\n  dd : '%dd',\n  M : '1m',\n  MM : '%dm',\n  y : '1y',\nyy : '%dy'\n}})\n\nconst themeDark = createMuiTheme({\n  palette: { type: 'dark' },\n});\n\nconst themeLight = createMuiTheme({\n  palette: { type: 'light' },\n});\n\nfunction ThemeSwitcher({children}){\n  const [light,setLight] = React.useState(false)\n  window.setLight = setLight\n  return (\n    <ThemeProvider theme={light ? themeLight : themeDark}>\n      {children}\n    </ThemeProvider>\n  );\n}\n\nReactDOM.render(\n  ( <Provider store={store}>\n      <MuiPickersUtilsProvider libInstance={moment} utils={MomentUtils} locale={'de'}>\n        <ThemeSwitcher>\n          <CssBaseline />\n          <Overtime/>\n        </ThemeSwitcher>\n      </MuiPickersUtilsProvider>\n    </Provider>\n  ), document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}