{"version":3,"sources":["lib.js","Gui.js","Comment.js","Settings.js","Counter.js","List.js","ListControls.js","MainControls.js","defaults.js","Overtime.js","serviceWorker.js","index.js"],"names":["localStorage","window","recMatchesMode","rec","mode","date","moment","lMode","toLowerCase","modeStart","startOf","valueOf","modeEnd","endOf","isBetween","renderTime","diff","getHours","getMinutes","getSeconds","renderDate","Date","toLocaleDateString","renderHours","downloadName","user","replace","purgeStore","e","confirm","removeItem","IconButton","onClick","variant","key","icon","children","className","Button","PresetList","preset","addPreset","delPresetId","React","useState","input","setInput","Form","Group","Label","InputGroup","FormControl","name","value","onChange","target","Append","faPlus","map","id","CommentBar","active","comment","changeComment","swapComment","setPreset","delPreset","doDeletePreset","placeholder","faSyncAlt","faSkullCrossbones","Comment","edit","setEdit","width","faCheck","SettingsButton","props","show","setShow","title","faBusinessTime","weeklyHours","SettingsModal","changeUser","changeWeeklyHours","mailToAddress","setMailToAddress","Modal","Dialog","Header","Title","Body","Prepend","Footer","Counter","start","toggle","now","list","deleteRecord","filter","row","time","toLocaleTimeString","ListControls","setState","changeMode","showSettings","total","m","csv","useMemo","btoa","reduce","p","c","mailto","encodeURIComponent","href","faEnvelope","download","faDownload","defaults","Overtime","push","concat","state","delete","delId","_","parseFloat","deactivate","activate","setTimer","timer","setInterval","t","forceUpdate","clearInterval","change","console","log","i","indexOf","JSON","parse","getItem","loadStore","this","setItem","stringify","Container","bind","List","Component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.35774f76.chunk.js","sourcesContent":["\nimport moment from 'moment';\n\nconst { localStorage } = window;\n\nconst recMatchesMode = ( rec, mode ) => {\n  if ( mode === \"Total\" ) return true;\n  const date  = moment(rec[0]), lMode = mode.toLowerCase();\n  const modeStart = moment().startOf(lMode).valueOf();\n  const modeEnd   = moment().endOf(lMode).valueOf();\n  return date.isBetween(modeStart,modeEnd);\n}\n\nconst renderTime = (diff)=>\n  `${diff.getHours()-1}h:${diff.getMinutes()}m:${diff.getSeconds()}s`\n\nconst loadStore = (defaults) =>\n  JSON.parse(localStorage.getItem('overtime') || 'null') || defaults;\n\nconst saveStore = (state) =>\n  localStorage.setItem('overtime',JSON.stringify(state));\n\nconst renderDate = (date) =>\n  ( new Date(date) ).toLocaleDateString('de-DE')\n\nconst renderHours = (date) =>\n  date / 1000 / 60 / 60\n\nconst downloadName = (user,mode) =>\n  `${user.replace(/[^a-zA-Z]+/g,'_')}_${mode.toLowerCase()}.csv`\n\nconst purgeStore = e => {\n  if ( window.confirm(\"ARE YOU REALLY SURE?\") ){\n    localStorage.removeItem('overtime')\n  }}\n\nexport {\n  recMatchesMode,\n  renderTime,\n  renderDate,\n  renderHours,\n  loadStore,\n  saveStore,\n  purgeStore,\n  downloadName\n};\n","\nimport React from 'react';\n\nimport {\n  Button\n} from 'react-bootstrap';\n\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome'\n\nfunction IconButton({onClick,variant,key,icon,children,className}){\n  return (\n    <Button onClick={onClick} variant={variant} key={key} className={className}>\n      <FontAwesomeIcon icon={icon}/>\n      {children}\n    </Button>\n  );\n}\n\nexport {\n  IconButton\n};\n","\nimport React from 'react';\n\nimport {\n  Button,\n  Form,\n  FormControl,\n  InputGroup\n} from 'react-bootstrap';\n\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome'\n\nimport {\n  faCheck,\n  faPlus,\n  faSyncAlt,\n  faSkullCrossbones\n} from '@fortawesome/free-solid-svg-icons'\n\nimport { IconButton } from './Gui'\n\nfunction Comment({value,changeComment}){\n  const [edit,setEdit] = React.useState(false)\n  return edit\n    ? <td width=\"99999999\">\n        <InputGroup>\n          <FormControl value={value} onChange={changeComment}/>\n          <InputGroup.Append>\n            <Button onClick={e => setEdit(false)}>\n              <FontAwesomeIcon icon={faCheck}/>\n            </Button>\n          </InputGroup.Append>\n        </InputGroup>\n      </td>\n    : <td width=\"99999999\" onClick={e => setEdit(true)}>{value}</td>\n}\n\nexport function PresetList({\n  preset, addPreset, delPresetId\n}){\n  const [input,setInput] = React.useState('');\n  return ( <>\n    <Form.Group>\n      <Form.Label>\n        Presets\n      </Form.Label>\n      <InputGroup>\n        <FormControl\n          name=\"user\"\n          value={input}\n          onChange={e => setInput(e.target.value)}\n        />\n        <InputGroup.Append>\n          <IconButton onClick={e => addPreset(input)} icon={faPlus}/>\n        </InputGroup.Append>\n      </InputGroup>\n    </Form.Group>\n    { preset.map( (preset,id) =>\n      <Button key={id} variant=\"danger\" className=\"preset\"\n        onClick={delPresetId(id)}\n      >\n        {preset}\n      </Button>\n    )}\n</> )}\n\nexport function CommentBar({\n  active, comment, changeComment, swapComment,\n  preset, setPreset, addPreset, delPreset, doDeletePreset\n}){ return (\n  <InputGroup>\n    <FormControl\n      placeholder=\"Comment\"\n      onChange={changeComment}\n      value={comment}\n    />\n    <InputGroup.Append>\n      { active ? <IconButton onClick={swapComment} icon={faSyncAlt}/> : null }\n      <IconButton onClick={e => addPreset(comment)} icon={faPlus}/>\n      { preset.map( preset =>\n        <Button key={preset} onClick={setPreset(preset)}>{preset}</Button>\n      )}\n      <IconButton\n        variant={doDeletePreset ? 'danger' : 'warning' }\n        onClick={delPreset}\n        icon={faSkullCrossbones}\n      />\n    </InputGroup.Append>\n  </InputGroup>\n)}\n\nexport default Comment;\n","\nimport React from 'react';\n\nimport {\n  Modal,\n  Form,\n  Button,\n  FormControl,\n  InputGroup\n} from 'react-bootstrap';\n\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome'\n\nimport {\n  faBusinessTime,\n  faSkullCrossbones,\n} from '@fortawesome/free-solid-svg-icons'\n\nimport {\n  purgeStore\n} from './lib'\n\nimport { PresetList } from './Comment'\n\nfunction SettingsButton(props){\n  const {show,setShow} = props;\n  return (\n    <Button\n      onClick={e => setShow(!show)}\n      title=\"user / weeklyHours\"\n    >\n      <FontAwesomeIcon icon={faBusinessTime}/> {props.user} / {props.weeklyHours} hrs\n    </Button>\n  )\n};\n\nfunction SettingsModal({\n  show, setShow, preset, addPreset, delPresetId, delPreset, user, changeUser,\n  weeklyHours, changeWeeklyHours, mailToAddress, setMailToAddress\n}){\n  if (!show) return null;\n  return (\n    <Modal.Dialog>\n      <Modal.Header>\n        <Modal.Title>Settings</Modal.Title>\n        <Button\n          variant=\"danger\"\n          className='pull-right'\n          onClick={purgeStore}\n        >\n          <FontAwesomeIcon icon={faSkullCrossbones}/>\n          &nbsp;Delete Everything&nbsp;\n          <FontAwesomeIcon icon={faSkullCrossbones}/>\n        </Button>\n\n      </Modal.Header>\n\n      <Modal.Body>\n        <Form.Group>\n          <Form.Label>\n            User Name\n          </Form.Label>\n          <FormControl\n            name=\"user\"\n            value={user}\n            onChange={changeUser}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>\n            eMail Target\n          </Form.Label>\n          <FormControl\n            name=\"mailToAddress\"\n            value={mailToAddress}\n            onChange={setMailToAddress}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>\n            Weekly Hours\n          </Form.Label>\n          <InputGroup>\n            <InputGroup.Prepend>\n              <FormControl\n                name=\"weeklyHours\"\n                value={weeklyHours}\n                onChange={changeWeeklyHours}\n              />\n            </InputGroup.Prepend>\n            <InputGroup.Append>\n              <span className=\"input-group-text\">hrs</span>\n            </InputGroup.Append>\n          </InputGroup>\n        </Form.Group>\n        <PresetList\n          preset={preset}\n          addPreset={addPreset}\n          delPresetId={delPresetId}\n        />\n      </Modal.Body>\n\n      <Modal.Footer>\n        <Button onClick={e => setShow(!show)} variant=\"primary\">Save changes</Button>\n      </Modal.Footer>\n    </Modal.Dialog>\n)};\n\nexport { SettingsButton, SettingsModal }\n","\nimport React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { renderTime } from './lib'\n\nexport default function Counter({active,start,toggle}){\n  const diff = new Date( Date.now() - start );\n  return (\n  <Button onClick={toggle} className={ active ? 'trig active' : 'trig' }>\n    { active ? renderTime(diff) : 'Start' }\n  </Button>\n)}\n","\nimport React from 'react';\n\nimport {\n  Button,\n} from 'react-bootstrap';\n\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome'\n\nimport {\n  faSkullCrossbones\n} from '@fortawesome/free-solid-svg-icons'\n\nimport {\n  recMatchesMode,\n  renderTime\n} from './lib'\n\n\nimport Comment from './Comment'\n\nexport default function({list,mode,deleteRecord,changeComment}){\n  return (\n  <table className=\"table table-striped\">\n    <tbody>\n      { list.filter( rec => recMatchesMode(rec,mode) ).map( (row,id) => {\n        const [date,time,comment] = row;\n        return <tr key={id}>\n          <td>\n            {(new Date(date).toLocaleDateString('de-DE'))}\n            &nbsp;\n            {(new Date(date).toLocaleTimeString('de-DE'))}\n          </td>\n          <td>{renderTime(new Date(time))}</td>\n          <Comment value={comment} changeComment={changeComment(id)}/>\n          <td width=\"1\">\n            <Button variant=\"danger\" onClick={deleteRecord(id)}>\n              <FontAwesomeIcon icon={faSkullCrossbones}/>\n            </Button>\n          </td>\n        </tr>;\n      })}\n    </tbody>\n  </table>\n)};\n","\nimport React from 'react';\nimport { Button, InputGroup } from 'react-bootstrap';\nimport { renderTime } from './lib'\n\nexport default function ListControls({\n  setState, changeUser, changeWeeklyHours, changeMode,\n  showSettings, user, mode, weeklyHours, total, list,\n  active,\n}){\n  return (\n  <InputGroup className=\"list-controls\">\n    <InputGroup.Prepend>\n      <span className=\"input-group-text\">\n        {renderTime(new Date(total))}\n      </span>\n    </InputGroup.Prepend>\n    <InputGroup.Append>\n      { ['Total','Day','Month','Year'].map( m=>\n      <Button\n        variant={m === mode ? 'warning' : 'primary'}\n        key={m}\n        onClick={changeMode(m)}>\n          {m}\n      </Button> )}\n    </InputGroup.Append>\n  </InputGroup>\n)}\n","\n\nimport React from 'react';\nimport { InputGroup } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faDownload,faEnvelope } from '@fortawesome/free-solid-svg-icons'\nimport { renderDate, renderHours, recMatchesMode, downloadName } from './lib'\nimport { SettingsButton } from './Settings'\n\nexport default function ListControls({\n  setState, changeUser, changeWeeklyHours, changeMode,\n  showSettings, user, mode, weeklyHours, total, list,\n  active, mailToAddress\n}){\n  const csv = React.useMemo( function(){\n    return `data:text/csv;base64,${btoa(\n        list.filter( rec => recMatchesMode(rec,mode) ).reduce((p,c) => {\n          return p += `${renderDate(c[0])},${renderHours(c[1])},${c[2]}\\n`;\n        },'')\n      )}`\n  },[mode,list]);\n  const mailto = React.useMemo( function(){\n    return (\n      `mailto:?to=${mailToAddress}` +\n      `&subject=${encodeURIComponent(`Overtime ${user}`)}` +\n      `&body=${encodeURIComponent(\n        \"Hi,\\n\" +\n        \"this is my overtime report as tab separated values,\\n\" +\n        \"you can copy paste them directly into excel or google docs,\\n\\n\" +\n        \"Best regards,\\n\" +\n        `${user}\\n\\n` +\n        \"------------------------------------------------\\n\" +\n        list.filter( rec => recMatchesMode(rec,mode) ).reduce((p,c) => {\n          return p += `${renderDate(c[0])}\\t${renderHours(c[1])}\\t${c[2]}\\n`;\n        },'') +\n        \"------------------------------------------------\\n\"\n      )}`\n  )},[mode,list,user,mailToAddress]);\n  return (\n  <InputGroup className=\"list-controls\">\n    <InputGroup.Prepend>\n      <SettingsButton\n        show={showSettings}\n        setShow={value => setState({showSettings:value})}\n        user={user}\n        changeUser={changeUser}\n        weeklyHours={weeklyHours}\n        changeWeeklyHours={changeWeeklyHours}\n      />\n    </InputGroup.Prepend>\n    <InputGroup.Append>\n      <a className=\"btn btn-primary\" href={mailto}>\n        <FontAwesomeIcon icon={faEnvelope}/>\n      </a>\n      <a className=\"btn btn-primary\" download={downloadName(user,mode)} href={csv}>\n        <FontAwesomeIcon icon={faDownload}/>\n      </a>\n    </InputGroup.Append>\n  </InputGroup>\n)}\n","\nconst defaults  = {\n  list:[],\n  preset:['Work','Prep','Meet'],\n  weeklyHours: 32,\n  user:'teacher',\n  delPreset:false,\n  mode:'Total',\n  showSettings:false,\n  active: false,\n  start: null,\n  comment: '',\n  mailToAddress:'boss@digitalcareerinstitute.org'\n};\n\nexport default defaults;\n","\nimport React             from 'react';\nimport { Container }     from 'react-bootstrap';\nimport { SettingsModal } from './Settings'\nimport { CommentBar }    from './Comment'\nimport Counter           from './Counter'\nimport List              from './List'\nimport ListControls      from './ListControls'\nimport MainControls      from './MainControls'\nimport defaults          from './defaults'\nimport { recMatchesMode, loadStore, saveStore } from './lib'\n\nexport default class Overtime extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = loadStore(defaults);\n    if ( this.state.active ) this.setTimer()\n  }\n  componentDidUpdate(){\n    saveStore(this.state)\n  }\n  componentWillUnmount(){\n    clearInterval(this.timer);\n  }\n  push = (rec)=>  this.setState({list:[rec].concat(this.state.list)});\n  delete = delId => e => { this.setState({\n    list:[...(this.state.list.filter( (_,id)=> id !== delId ))]\n  })}\n  changeWeeklyHours = e => this.setState(\n    {weeklyHours:parseFloat(e.target.value)}\n  )\n  changeMode = mode => e => this.setState({mode});\n  changeUser = e => this.setState({user:e.target.value});\n  changeComment = (id) => e => {\n    const { list } = this.state;\n    list[id][2] = e.target.value;\n    this.setState({list});\n  }\n  swapComment = e => {\n    if ( ! this.state.active ) return;\n    this.deactivate();\n    this.setState(this.activate());\n  }\n  toggle = e => this.setState(\n    this.state.active ? this.deactivate() : this.activate()\n  )\n  setTimer = e => this.timer = setInterval(t => { this.forceUpdate() },1000);\n  activate = e => {\n    this.setTimer()\n    return { active:true, start: Date.now() };\n  }\n  deactivate = e => {\n    clearInterval(this.timer);\n    const diff = Date.now() - this.state.start;\n    this.push([Date.now(),diff,this.state.comment])\n    return { active:false, start:Date.now(), comment:'' };\n  }\n  change = e => this.setState({comment:e.target.value});\n  addPreset = value => this.setState({ preset: [value].concat(this.state.preset) })\n  delPreset = e => this.setState({ delPreset: ! this.state.delPreset })\n  delPresetId = id => e => {\n    console.log(id);\n    this.setState({\n      delPreset:false, preset: this.state.preset.filter( (_,i) => i !== id )\n    })}\n  setMailToAddress = e => this.setState({mailToAddress:e.target.value})\n  setPreset = key => e =>\n    ! this.state.delPreset\n    ? this.setState({ comment: key })\n    : this.delPresetId(this.state.preset.indexOf(key))(e)\n  render(){\n    const {\n      showSettings, mode, list, start, active, preset, user,\n      weeklyHours, comment, mailToAddress\n    } = this.state;\n    const total = list.reduce( (total,rec) => {\n      return recMatchesMode(rec,mode) ? total += rec[1] : total;\n    },0);\n    if ( showSettings ) return (\n    <SettingsModal\n      show={showSettings} setShow={value => this.setState({showSettings:value})}\n      user={user} changeUser={this.changeUser}\n      weeklyHours={weeklyHours} changeWeeklyHours={this.changeWeeklyHours}\n      preset={preset} addPreset={this.addPreset}\n      delPreset={this.delPreset} delPresetId={this.delPresetId}\n      mailToAddress={mailToAddress} setMailToAddress={this.setMailToAddress}\n    /> );\n    return (\n      <Container>\n        <MainControls list={list} total={total}\n          user={user} changeUser={this.changeUser}\n          mode={mode} changeMode={this.changeMode}\n          weeklyHours={weeklyHours} changeWeeklyHours={this.changeWeeklyHours}\n          setState={this.setState.bind(this)} showSettings={this.showSettings}\n          mailToAddress={mailToAddress}\n        />\n        <Counter active={active} start={start} toggle={this.toggle}/>\n        <CommentBar active={active} swapComment={this.swapComment}\n          comment={comment} changeComment={this.change}\n          preset={preset} addPreset={this.addPreset}\n          setPreset={this.setPreset} delPreset={this.delPreset}\n          doDeletePreset={this.state.delPreset}\n        />\n        <ListControls list={list} total={total}\n          user={user} changeUser={this.changeUser}\n          mode={mode} changeMode={this.changeMode}\n          weeklyHours={weeklyHours} changeWeeklyHours={this.changeWeeklyHours}\n          setState={this.setState.bind(this)} showSettings={this.showSettings}\n        />\n        <List list={list} mode={mode}\n          changeComment={this.changeComment}\n          deleteRecord={this.delete}\n        />\n      </Container>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport './index.css';\nimport Overtime from './Overtime';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Overtime />, document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}