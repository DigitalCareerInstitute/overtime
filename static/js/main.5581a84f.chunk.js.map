{"version":3,"sources":["lib.js","App.js","serviceWorker.js","index.js"],"names":["localStorage","window","renderTime","diff","getHours","getMinutes","getSeconds","defaults","list","preset","weeklyHours","user","delPreset","counter","active","start","comment","Totals","props","commitCounterState","setState","push","rec","concat","state","delete","delId","e","filter","_","id","changeWeeklyHours","parseFloat","target","value","changeUser","changeComment","toggle","deactivate","activate","timer","setInterval","t","forceUpdate","Date","now","clearInterval","change","addPreset","key","v","JSON","parse","getItem","loadStore","this","setItem","stringify","total","reduce","csv","btoa","p","c","date","toLocaleDateString","renderHours","Container","InputGroup","Settings","Button","onClick","className","FormControl","placeholder","onChange","Append","icon","faPlus","map","variant","faSkullCrossbones","colSpan","Prepend","download","href","faTable","row","time","toLocaleTimeString","Comment","width","React","Component","useState","edit","setEdit","faCheck","show","setShow","faBusinessTime","name","title","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5581a84f.chunk.js","sourcesContent":["\nconst { localStorage } = window;\n\nconst renderTime = (diff)=>\n  `${diff.getHours()-1}h:${diff.getMinutes()}m:${diff.getSeconds()}s`\n\nconst loadStore = (defaults) =>\n  JSON.parse(localStorage.getItem('overtime') || 'null') || defaults;\n\nconst saveStore = (state) =>\n  localStorage.setItem('overtime',JSON.stringify(state));\n\nconst renderDate = (date) =>\n  ( new Date(date) ).toLocaleDateString('de-DE')\n\nconst renderHours = (date) =>\n  date / 1000 / 60 / 60\n\nexport { renderTime, renderDate, renderHours, loadStore, saveStore };\n","\nimport React from 'react';\nimport './App.css';\n\nimport {\n  Button,\n  Container,\n  FormControl,\n  InputGroup\n} from 'react-bootstrap';\n\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome'\n\nimport {\n  faBusinessTime,\n  faCheck,\n  faTable,\n  faSkullCrossbones,\n  faPlus\n} from '@fortawesome/free-solid-svg-icons'\n\nimport {\n  renderTime,\n  renderDate,\n  renderHours,\n  loadStore,\n  saveStore\n} from './lib'\n\nconst defaults  = {\n  list:[],\n  preset:['Work','Prep','Meet'],\n  weeklyHours: 32,\n  user:'teacher',\n  delPreset:false,\n  counter: {\n    active: false,\n    start: null,\n    comment: '' }\n};\n\nclass Totals extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = loadStore(defaults);\n    if ( this.state.counter.active ) this.activate();\n  }\n  commitCounterState = (counter) => {\n    this.setState({counter});\n  }\n  push = (rec)=> {\n    this.setState({list:[rec].concat(this.state.list)});\n  }\n  componentDidUpdate(){\n    saveStore(this.state);\n  }\n  delete = delId => e => {\n    this.setState({\n      list:[...(this.state.list.filter( (_,id)=> id !== delId ))]\n    });\n  }\n  changeWeeklyHours = e =>\n    this.setState({weeklyHours:parseFloat(e.target.value)});\n    changeUser = e =>\n      this.setState({user:e.target.value});\n  changeComment = (id) => e => {\n    const { list } = this.state;\n    list[id][2] = e.target.value;\n    this.setState({list});\n  }\n  toggle = e => this.setState(\n    this.state.active ? this.deactivate() : this.activate()\n  )\n  activate = e => {\n    this.timer = setInterval(t => {\n      this.forceUpdate();\n    },1000);\n    return { active:true, start:Date.now() };\n  }\n  deactivate = e => {\n    clearInterval(this.timer);\n    const diff = Date.now() - this.state.start;\n    this.push([Date.now(),diff,this.state.comment])\n    return { active:false, start:null, comment:'' };\n  }\n  componentWillUnmount(){\n    this.commitCounterState(this.state);\n    clearInterval(this.timer);\n  }\n  change = e => {\n    this.setState({comment:e.target.value});\n    this.state.commitCounterState(this.state);\n  }\n  addPreset = e => this.setState({ preset: [this.state.comment].concat(this.state.preset) })\n  delPreset = e => this.setState({ delPreset: ! this.state.delPreset })\n  preset = key => e =>\n    ! this.state.delPreset\n    ? this.setState({ comment: key })\n    : this.setState({\n      delPreset:false,\n      preset:this.state.preset.filter( v => v !== key )\n    })\n  render(){\n    const total = this.state.list.reduce( (total,rec) => {\n      return total += rec[1];\n    },0);\n    const { list, start, active, preset, user, weeklyHours } = this.state;\n    const diff = new Date( Date.now() - start );\n    const csv = `data:text/csv;base64,${btoa(\n      list.reduce((p,c) => {\n        return p += `${renderDate(c[0])},${renderHours(c[1])},${c[2]}\\n`;\n      },'')\n    )}`\n    return (\n      <Container>\n        <InputGroup>\n          <Settings\n            user={user}\n            changeUser={this.changeUser}\n            weeklyHours={weeklyHours}\n            changeWeeklyHours={this.changeWeeklyHours}\n          />\n        </InputGroup>\n        <Button onClick={this.toggle} className={ active ? 'trig active' : 'trig' }>\n          { this.state.active ? 'Stop' : 'Start' }\n          <br/>\n          { this.state.start ? renderTime(diff) : null }\n        </Button>\n        <InputGroup>\n          <FormControl\n            placeholder=\"Comment\"\n            onChange={this.change}\n            value={this.state.comment}\n          />\n          <InputGroup.Append>\n            <Button onClick={this.addPreset}>\n              <FontAwesomeIcon icon={faPlus}/>\n            </Button>\n            { preset.map( preset =>\n              <Button key={preset} onClick={this.preset(preset)}>{preset}</Button>\n            )}\n            <Button\n              variant={this.state.delPreset ? 'danger' : 'warning' }\n              onClick={this.delPreset}\n            >\n              <FontAwesomeIcon\n                icon={faSkullCrossbones}\n              />\n            </Button>\n          </InputGroup.Append>\n        </InputGroup>\n        <table className=\"table table-striped\">\n          <tbody>\n            <tr>\n              <td>Total:</td>\n              <td>{renderTime(new Date(total))}</td>\n              <td colSpan={2}>\n                <InputGroup className=\"pull-right\">\n                  <InputGroup.Prepend>\n                    <a className=\"btn btn-primary\" download={`${user}.csv`} href={csv}>\n                      <FontAwesomeIcon icon={faTable}/>\n                    </a>\n                    <Button>Day</Button>\n                    <Button>Month</Button>\n                    <Button>Year</Button>\n                    <Button>Total</Button>\n                  </InputGroup.Prepend>\n                  <InputGroup.Append>\n                    <Button variant=\"danger\">\n                      <FontAwesomeIcon icon={faSkullCrossbones}/>\n                    </Button>\n                  </InputGroup.Append>\n                </InputGroup>\n              </td>\n            </tr>\n            { list.map( (row,id) => {\n              const [date,time,comment] = row;\n              return <tr key={id}>\n                <td>\n                  {(new Date(date).toLocaleDateString('de-DE'))}\n                  &nbsp;\n                  {(new Date(date).toLocaleTimeString('de-DE'))}\n                </td>\n                <td>{renderTime(new Date(time))}</td>\n                <Comment value={comment} changeComment={this.changeComment(id)}/>\n                <td width=\"1\">\n                  <Button variant=\"danger\" onClick={this.delete(id)}>\n                    <FontAwesomeIcon icon={faSkullCrossbones}/>\n                  </Button>\n                </td>\n              </tr>;\n            })}\n          </tbody>\n        </table>\n      </Container>\n    );\n  }\n}\n\nfunction Comment({value,changeComment}){\n  const [edit,setEdit] = React.useState(false)\n  return edit\n    ? <td width=\"99999999\">\n        <InputGroup>\n          <FormControl value={value} onChange={changeComment}/>\n          <InputGroup.Append>\n            <Button onClick={e => setEdit(false)}>\n              <FontAwesomeIcon icon={faCheck}/>\n            </Button>\n          </InputGroup.Append>\n        </InputGroup>\n      </td>\n    : <td width=\"99999999\" onClick={e => setEdit(true)}>{value}</td>\n}\n\nfunction Settings(props){\n  const [show,setShow] = React.useState(false);\n  if (!show) return (\n    <Button\n      onClick={e => setShow(!show)}\n      title=\"user / weeklyHours\"\n    >\n      <FontAwesomeIcon icon={faBusinessTime}/> {props.user} / {props.weeklyHours} hrs\n    </Button>\n  )\n  return (\n    <>\n      <InputGroup.Prepend>\n        <Button onClick={e => setShow(!show)}>\n          <FontAwesomeIcon icon={faBusinessTime}/>\n        </Button>\n      </InputGroup.Prepend>\n      <FormControl\n        name=\"user\"\n        value={props.user}\n        onChange={props.changeUser}\n      />\n      <FormControl\n        name=\"weeklyHours\"\n        value={props.weeklyHours}\n        onChange={props.changeWeeklyHours}\n      />\n    </>\n)};\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Totals/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}