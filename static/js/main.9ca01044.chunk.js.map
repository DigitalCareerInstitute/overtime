{"version":3,"sources":["lib.js","Comment.js","Settings.js","List.js","ListControls.js","MainControls.js","defaults.js","Overtime.js","serviceWorker.js","index.js"],"names":["localStorage","window","recMatchesMode","rec","mode","date","moment","lMode","toLowerCase","modeStart","startOf","valueOf","modeEnd","endOf","isBetween","renderDate","Date","toLocaleDateString","renderTotal","to","renderHours","format","downloadName","user","replace","purgeStore","e","confirm","removeItem","PresetList","preset","addPreset","delPresetId","React","useState","input","setInput","TextField","label","name","value","onChange","target","variant","fullWidth","InputProps","endAdornment","InputAdornment","position","IconButton","aria-label","onClick","edge","labelWidth","map","id","Button","key","className","useStyles","makeStyles","theme","flexGrow","padding","spacing","paper","display","margin","textAlign","color","palette","text","secondary","CommentBar","active","comment","setComment","swapComment","setPreset","classes","delPreset","doDeletePreset","Paper","Autocomplete","freeSolo","options","v","renderInput","params","menuButton","marginRight","title","SettingsModal","show","setShow","changeUser","weeklyHours","changeWeeklyHours","mailToAddress","setMailToAddress","setState","AppBar","Toolbar","showSettings","Typography","icon","faSkullCrossbones","noValidate","autoComplete","root","width","backgroundColor","background","list","deleteRecord","editRecord","changeComment","Table","filter","row","time","utcTime","utcOffset","TableRow","TableCell","DateTimePicker","ampm","TimePicker","style","ListControls","changeMode","Tabs","m","Tab","total","toggle","start","csv","useMemo","btoa","reduce","p","c","mailto","encodeURIComponent","toNow","renderTime","href","download","defaults","Overtime","props","push","concat","state","delete","delId","_","parseFloat","deactivate","activate","setTimer","timer","setInterval","t","forceUpdate","now","clearInterval","diff","change","console","log","i","indexOf","JSON","parse","getItem","loadStore","this","setItem","stringify","bind","List","Component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","locale","relativeTime","future","past","s","mm","h","hh","d","dd","M","MM","y","yy","createMuiTheme","type","ReactDOM","render","libInstance","utils","MomentUtils","ThemeProvider","CssBaseline","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9ca01044.chunk.js","sourcesContent":["\nimport moment from 'moment';\n\nconst { localStorage } = window;\n\nconst recMatchesMode = ( rec, mode ) => {\n  if ( mode === \"Total\" ) return true;\n  const date  = moment(rec[0]), lMode = mode.toLowerCase();\n  const modeStart = moment().startOf(lMode).valueOf();\n  const modeEnd   = moment().endOf(lMode).valueOf();\n  return date.isBetween(modeStart,modeEnd);\n}\n\nconst renderTime = (start)=>\n  moment(start).toNow(true)\n\nconst loadStore = (defaults) =>\n  JSON.parse(localStorage.getItem('overtime') || 'null') || defaults;\n\nconst saveStore = (state) =>\n  localStorage.setItem('overtime',JSON.stringify(state));\n\nconst renderDate = (date) =>\n  ( new Date(date) ).toLocaleDateString('de-DE')\n\nconst renderTotal = (date) =>\n  moment(date).to(moment(0),true)\n\nconst renderHours = (date) =>\n  moment(date).format('HH:MM')\n\nconst downloadName = (user,mode) =>\n  `${user.replace(/[^a-zA-Z]+/g,'_')}_${mode.toLowerCase()}.csv`\n\nconst purgeStore = e => {\n  if ( window.confirm(\"ARE YOU REALLY SURE?\") ){\n    localStorage.removeItem('overtime')\n  }}\n\nexport {\n  recMatchesMode,\n  renderTime,\n  renderDate,\n  renderHours,\n  loadStore,\n  saveStore,\n  renderTotal,\n  purgeStore,\n  downloadName\n};\n","\nimport React from 'react';\n\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Button from '@material-ui/core/Button';\nimport AddCircleOutline from '@material-ui/icons/AddCircleOutline';\nimport SwapHorizontalCircle from '@material-ui/icons/SwapHorizontalCircle';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport function PresetList({\n  preset, addPreset, delPresetId\n}){\n  const [input,setInput] = React.useState('');\n  return ( <>\n    <TextField\n      label=\"Add Preset\"\n      name=\"addComment\"\n      value={input}\n      onChange={e => setInput(e.target.value)}\n      variant=\"outlined\"\n      fullWidth\n      InputProps={{\n        endAdornment:<InputAdornment position=\"end\">\n          <IconButton\n            aria-label=\"add preset\"\n            onClick={e => addPreset(input)}\n            edge=\"end\"\n          >\n            <AddCircleOutline/>\n          </IconButton>\n        </InputAdornment>\n      }}\n      labelWidth={70}\n    />\n    { preset.map( (preset,id) =>\n      <Button key={id} variant=\"danger\" className=\"preset\"\n        onClick={delPresetId(id)}\n      >\n        {preset}\n      </Button>\n    )}\n</> )}\n\nconst useStyles = makeStyles(theme => ({\n  input: {\n    flexGrow: 1,\n    padding: theme.spacing(1),\n  },\n  paper: {\n    display:'flex',\n    margin: theme.spacing(1),\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport function CommentBar({\n  active, comment, setComment, swapComment,\n  preset, setPreset, addPreset, delPreset, doDeletePreset\n}){\n  const classes = useStyles();\n  if(!active) return null;\n  return (\n    <Paper className={classes.paper}>\n      <Autocomplete freeSolo\n        className={classes.input}\n        id=\"comment\"\n        options={preset}\n        value={comment}\n        onChange={(e,v)=> setComment(v)}\n        renderInput={params =>\n        <TextField\n          onChange={e=> setComment(e.target.value)}\n          {...params}\n      />}/>\n      <IconButton\n        variant=\"contained\"\n        aria-label=\"add preset\"\n        onClick={e => addPreset(comment) }\n        ><AddCircleOutline/>\n      </IconButton>\n      <IconButton\n        variant=\"contained\"\n        aria-label=\"add preset\"\n        onClick={swapComment}\n        ><SwapHorizontalCircle/>\n      </IconButton>\n    </Paper>\n)}\n","\nimport React from 'react';\n\nimport {\n  Button, TextField, Typography,\n  AppBar,Toolbar, IconButton, makeStyles\n} from '@material-ui/core';\n\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome'\n\nimport {\n  faBusinessTime,\n  faSkullCrossbones,\n} from '@fortawesome/free-solid-svg-icons'\n\nimport {\n  purgeStore\n} from './lib'\n\nimport { PresetList } from './Comment'\n\nimport Close from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles(theme => ({\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  paper: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n    flexGrow: 1,\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  }\n}));\n\nfunction SettingsButton(props){\n  const {show,setShow} = props;\n  return (\n    <Button\n      onClick={e => setShow(!show)}\n      title=\"user / weeklyHours\"\n    >\n      <FontAwesomeIcon icon={faBusinessTime}/> {props.user} / {props.weeklyHours} hrs\n    </Button>\n  )\n};\n\nfunction SettingsModal({\n  show, setShow, preset, addPreset, delPresetId, delPreset, user, changeUser,\n  weeklyHours, changeWeeklyHours, mailToAddress, setMailToAddress, setState\n}){\n  const classes = useStyles();\n  if (!show) return null;\n  return (\n    <>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\"\n            onClick={e => setState({showSettings:false}) }>\n            <Close/>\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Settings\n          </Typography>\n          <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            className='pull-right'\n            onClick={purgeStore}\n          >\n            <FontAwesomeIcon icon={faSkullCrossbones}/>\n            &nbsp;Delete Everything&nbsp;\n            <FontAwesomeIcon icon={faSkullCrossbones}/>\n          </Button>\n        </Toolbar>\n      </AppBar>\n      <form className={classes.paper} noValidate autoComplete=\"off\">\n        <TextField fullWidth variant=\"outlined\" label=\"User\" name=\"user\" value={user} onChange={changeUser}/>\n        <TextField fullWidth variant=\"outlined\" label=\"eMail Target\" name=\"mailToAddress\" value={mailToAddress} onChange={setMailToAddress}/>\n        <TextField fullWidth variant=\"outlined\" label=\"Weekly Hours\" name=\"weeklyHours\" value={weeklyHours} onChange={changeWeeklyHours}/>\n        <PresetList\n          preset={preset}\n          addPreset={addPreset}\n          delPresetId={delPresetId}\n        />\n      </form>\n    </>\n)};\n\nexport { SettingsButton, SettingsModal }\n","\nimport React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport IconButton from '@material-ui/core/IconButton';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport HighlightOff from '@material-ui/icons/HighlightOff';\n\nimport { TextField, } from '@material-ui/core';\nimport { DateTimePicker, TimePicker } from '@material-ui/pickers';\n\nimport { recMatchesMode } from './lib'\nimport moment from 'moment'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function({list,preset,mode,deleteRecord,changeComment,editRecord}){\n  const classes = useStyles();\n  return (\n  <Table className={classes.root}><tbody> {\n    list.filter( rec => recMatchesMode(rec,mode) ).map( (row,id) => {\n      const [date,time,comment] = row;\n      let utcTime = moment(time).utcOffset(0)\n      return (\n      <TableRow key={id}>\n        <TableCell>\n          <DateTimePicker\n            className=\"list-date\"\n            format=\"DD.MM.YYYY HH:mm\"\n            value={date}\n            ampm={false}\n            onChange={ value => editRecord(id,[value.valueOf(),time,comment])}\n          />\n          <TimePicker\n            format=\"HH:mm\"\n            className=\"list-time\"\n            value={utcTime} ampm={false}\n            onChange={ value => editRecord(id,[date,value.valueOf(),comment])}\n          />\n        </TableCell>\n        <TableCell style={{flexGrow:'1'}}>\n          <Autocomplete freeSolo\n            className={classes.input}\n            id=\"comment\"\n            options={preset}\n            value={comment}\n            onChange={ (e,value) => editRecord(id,[date,time,value])}\n            renderInput={params =>\n            <TextField\n              onChange={ value => editRecord(id,[date,time,value])}\n              {...params}\n          />}/>\n        </TableCell>\n        <TableCell>\n          <IconButton onClick={deleteRecord(id)}>\n            <HighlightOff/>\n          </IconButton>\n        </TableCell>\n      </TableRow> )})}\n  </tbody></Table>\n)};\n","\nimport React from 'react';\nimport { Tab, Tabs } from '@material-ui/core';\n\nexport default function ListControls({changeMode, mode}){ return (\n  <Tabs variant=\"fullWidth\" value={mode} aria-label=\"select date range\">\n  {['Total','Day','Month','Year'].map( m =>\n    <Tab key={m} onClick={ changeMode(m) } label={m} value={m}/>)}\n  </Tabs>\n)}\n","\n\nimport React from 'react';\nimport { AppBar,Toolbar, Typography, IconButton, makeStyles } from '@material-ui/core';\nimport { renderTotal, renderDate, renderTime, renderHours, recMatchesMode, downloadName } from './lib'\n\nimport Menu from '@material-ui/icons/Menu';\nimport CoudDownload from '@material-ui/icons/CloudDownload';\nimport Mail from '@material-ui/icons/Mail';\nimport PlayCircleOutline from '@material-ui/icons/PlayCircleOutline';\nimport HighlightOff from '@material-ui/icons/HighlightOff';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function ListControls({\n  setState, changeUser, changeWeeklyHours, changeMode,\n  showSettings, user, mode, weeklyHours, total, list,\n  active, mailToAddress, toggle, start\n}){\n  const classes = useStyles();\n  const csv = React.useMemo( function(){\n  return `data:text/csv;base64,${btoa(\n      list.filter( rec => recMatchesMode(rec,mode) ).reduce((p,c) => {\n        return p += `${renderDate(c[0])},${renderHours(c[1])},${c[2]}\\n`;\n      },'')\n    )}`\n  },[mode,list]);\n  const mailto = React.useMemo( function(){\n    return (\n      `mailto:?to=${mailToAddress}` +\n      `&subject=${encodeURIComponent(`Overtime ${user}`)}` +\n      `&body=${encodeURIComponent(\n        \"Hi,\\n\" +\n        \"this is my overtime report as tab separated values,\\n\" +\n        \"you can copy paste them directly into excel or google docs,\\n\\n\" +\n        \"Best regards,\\n\" +\n        `${user}\\n\\n` +\n        \"------------------------------------------------\\n\" +\n        list.filter( rec => recMatchesMode(rec,mode) ).reduce((p,c) => {\n          return p += `${renderDate(c[0])}\\t${renderHours(c[1])}\\t${c[2]}\\n`;\n        },'') +\n        \"------------------------------------------------\\n\"\n      )}`\n  )},[mode,list,user,mailToAddress]);\n  return (\n  <AppBar position=\"static\">\n    <Toolbar>\n      <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\"\n        onClick={e => setState({showSettings:true}) }>\n        <Menu/>\n      </IconButton>\n      <Typography variant=\"h6\" className={classes.title}>\n        { active\n        ? `${renderTime(start)} / ${renderTotal(total)} `\n        : renderTotal(total) }\n      </Typography>\n      <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"mail\" onClick={toggle}>\n        { !active ? <PlayCircleOutline/> : <HighlightOff/> }\n      </IconButton>\n      <IconButton className={classes.menuButton} href={mailto} color=\"inherit\" aria-label=\"mail\">\n        <Mail/>\n      </IconButton>\n      <IconButton className={classes.menuButton} download={downloadName(user,mode)} href={csv} color=\"inherit\" aria-label=\"csv\">\n        <CoudDownload/>\n      </IconButton>\n    </Toolbar>\n  </AppBar>\n)}\n","\nconst defaults  = {\n  list:[],\n  preset:['Work','Prep','Meet'],\n  weeklyHours: 32,\n  user:'teacher',\n  delPreset:false,\n  mode:'Total',\n  showSettings:false,\n  active: false,\n  start: null,\n  comment: '',\n  mailToAddress:'boss@digitalcareerinstitute.org'\n};\n\nexport default defaults;\n","\nimport React             from 'react';\nimport { SettingsModal } from './Settings'\nimport { CommentBar }    from './Comment'\nimport List              from './List'\nimport ListControls      from './ListControls'\nimport MainControls      from './MainControls'\nimport defaults          from './defaults'\nimport { recMatchesMode, loadStore, saveStore } from './lib'\n\nexport default class Overtime extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = loadStore(defaults);\n    if ( this.state.active ) this.setTimer()\n  }\n  componentDidUpdate(){\n    saveStore(this.state)\n  }\n  componentWillUnmount(){\n    clearInterval(this.timer);\n  }\n  push = (rec)=>  this.setState({list:[rec].concat(this.state.list)});\n  delete = delId => e => { this.setState({\n    list:[...(this.state.list.filter( (_,id)=> id !== delId ))]\n  })}\n  changeWeeklyHours = e => this.setState(\n    {weeklyHours:parseFloat(e.target.value)}\n  )\n  changeMode = mode => e => this.setState({mode});\n  changeUser = e => this.setState({user:e.target.value});\n  setComment = comment => this.setState({comment});\n  changeComment = (id) => e => {\n    const { list } = this.state;\n    list[id][2] = e.target.value;\n    this.setState({list});\n  }\n  editRecord = (id, value)=> {\n    const { list } = this.state;\n    list[id] = value;\n    this.setState({list});\n  }\n  swapComment = e => {\n    if ( ! this.state.active ) return;\n    this.deactivate();\n    this.setState(this.activate());\n  }\n  toggle = e => this.setState(\n    this.state.active ? this.deactivate() : this.activate()\n  )\n  setTimer = e => this.timer = setInterval(t => { this.forceUpdate() },1000);\n  activate = e => {\n    this.setTimer()\n    return { active:true, start: Date.now() };\n  }\n  deactivate = e => {\n    clearInterval(this.timer);\n    const diff = Date.now() - this.state.start;\n    this.push([Date.now(),diff,this.state.comment])\n    return { active:false, start:Date.now(), comment:'' };\n  }\n  change = e => this.setState({comment:e.target.value});\n  addPreset = value => this.setState({ preset: [value].concat(this.state.preset) })\n  delPreset = e => this.setState({ delPreset: ! this.state.delPreset })\n  delPresetId = id => e => {\n    console.log(id);\n    this.setState({\n      delPreset:false, preset: this.state.preset.filter( (_,i) => i !== id )\n    })}\n  setMailToAddress = e => this.setState({mailToAddress:e.target.value})\n  setPreset = key => e =>\n    ! this.state.delPreset\n    ? this.setState({ comment: key })\n    : this.delPresetId(this.state.preset.indexOf(key))(e)\n  render(){\n    const {\n      showSettings, mode, list, start, active, preset, user,\n      weeklyHours, comment, mailToAddress\n    } = this.state;\n    const total = list.reduce( (total,rec) => {\n      return recMatchesMode(rec,mode) ? total += rec[1] : total;\n    },0);\n    if ( showSettings ) return (\n    <SettingsModal\n      setState={this.setState.bind(this)}\n      show={showSettings} setShow={value => this.setState({showSettings:value})}\n      user={user} changeUser={this.changeUser}\n      weeklyHours={weeklyHours} changeWeeklyHours={this.changeWeeklyHours}\n      preset={preset} addPreset={this.addPreset}\n      delPreset={this.delPreset} delPresetId={this.delPresetId}\n      mailToAddress={mailToAddress} setMailToAddress={this.setMailToAddress}\n    /> );\n    return (\n      <>\n        <MainControls list={list} total={total}\n          toggle={this.toggle} start={start} active={active}\n          user={user} changeUser={this.changeUser}\n          mode={mode} changeMode={this.changeMode}\n          weeklyHours={weeklyHours} changeWeeklyHours={this.changeWeeklyHours}\n          setState={this.setState.bind(this)} showSettings={this.showSettings}\n          mailToAddress={mailToAddress}\n        />\n        <CommentBar active={active} swapComment={this.swapComment}\n          comment={comment} setComment={this.setComment}\n          preset={preset} addPreset={this.addPreset}\n          setPreset={this.setPreset} delPreset={this.delPreset}\n          doDeletePreset={this.state.delPreset}\n        />\n        <ListControls list={list} total={total}\n          user={user} changeUser={this.changeUser}\n          mode={mode} changeMode={this.changeMode}\n          weeklyHours={weeklyHours} changeWeeklyHours={this.changeWeeklyHours}\n          setState={this.setState.bind(this)} showSettings={this.showSettings}\n        />\n        <List {...{list,mode,preset}}\n          changeComment={this.changeComment}\n          deleteRecord={this.delete}\n          editRecord={this.editRecord}\n        />\n      </>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport './index.css';\nimport Overtime from './Overtime';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport MomentUtils from '@date-io/moment'\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport moment from 'moment';\nimport 'moment/locale/de';\nmoment.locale('de',{ relativeTime : {\n  future : '%s',\n  past : '%s',\n  s : '>1m',\n  m : '1m',\n  mm : '%dm',\n  h : '1h',\n  hh : '%dh',\n  d : '1d',\n  dd : '%dd jours',\n  M : '1m',\n  MM : '%dm',\n  y : '1y',\nyy : '%dy'\n}})\n\nconst theme = createMuiTheme({\n  palette: { type: 'dark' },\n});\n\nReactDOM.render(\n  ( <MuiPickersUtilsProvider libInstance={moment} utils={MomentUtils} locale={'de'}>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <Overtime/>\n      </ThemeProvider>\n    </MuiPickersUtilsProvider>\n  ), document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}