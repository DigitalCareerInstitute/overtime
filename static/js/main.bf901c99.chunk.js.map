{"version":3,"sources":["lib.js","Settings.js","Gui.js","Comment.js","Counter.js","List.js","ListControls.js","defaults.js","Overtime.js","serviceWorker.js","index.js"],"names":["localStorage","window","recMatchesMode","rec","mode","date","moment","lMode","toLowerCase","modeStart","startOf","valueOf","modeEnd","endOf","isBetween","renderTime","diff","getHours","getMinutes","getSeconds","downloadName","user","replace","purgeStore","e","confirm","removeItem","SettingsButton","props","show","setShow","Button","onClick","title","icon","faBusinessTime","weeklyHours","SettingsModal","Modal","Dialog","Header","Title","variant","className","faSkullCrossbones","Body","Form","Group","Label","FormControl","name","value","onChange","changeUser","InputGroup","Prepend","changeWeeklyHours","Append","Footer","IconButton","key","CommentBar","preset","comment","changeComment","setPreset","addPreset","delPreset","doDeletePreset","placeholder","faPlus","map","Comment","React","useState","edit","setEdit","width","faCheck","Counter","active","start","toggle","Date","now","list","deleteRecord","filter","row","id","time","toLocaleDateString","toLocaleTimeString","ListControls","setState","changeMode","showSettings","total","csv","useMemo","btoa","reduce","p","c","renderHours","m","download","href","faDownload","defaults","counter","Overtime","commitCounterState","push","concat","state","delete","delId","_","parseFloat","target","deactivate","activate","timer","setInterval","t","forceUpdate","clearInterval","change","v","JSON","parse","getItem","loadStore","this","setItem","stringify","Container","bind","List","Component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.bf901c99.chunk.js","sourcesContent":["\nimport moment from 'moment';\n\nconst { localStorage } = window;\n\nconst recMatchesMode = ( rec, mode ) => {\n  if ( mode === \"Total\" ) return true;\n  const date  = moment(rec[0]), lMode = mode.toLowerCase();\n  const modeStart = moment().startOf(lMode).valueOf();\n  const modeEnd   = moment().endOf(lMode).valueOf();\n  return date.isBetween(modeStart,modeEnd);\n}\n\nconst renderTime = (diff)=>\n  `${diff.getHours()-1}h:${diff.getMinutes()}m:${diff.getSeconds()}s`\n\nconst loadStore = (defaults) =>\n  JSON.parse(localStorage.getItem('overtime') || 'null') || defaults;\n\nconst saveStore = (state) =>\n  localStorage.setItem('overtime',JSON.stringify(state));\n\nconst renderDate = (date) =>\n  ( new Date(date) ).toLocaleDateString('de-DE')\n\nconst renderHours = (date) =>\n  date / 1000 / 60 / 60\n\nconst downloadName = (user,mode) =>\n  `${user.replace(/[^a-zA-Z]+/g,'_')}_${mode.toLowerCase()}.csv`\n\nconst purgeStore = e => {\n  if ( window.confirm(\"ARE YOU REALLY SURE?\") ){\n    localStorage.removeItem('overtime')\n  }}\n\nexport {\n  recMatchesMode,\n  renderTime,\n  renderDate,\n  renderHours,\n  loadStore,\n  saveStore,\n  purgeStore,\n  downloadName\n};\n","\nimport React from 'react';\n\nimport {\n  Modal,\n  Form,\n  Button,\n  FormControl,\n  InputGroup\n} from 'react-bootstrap';\n\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome'\n\nimport {\n  faBusinessTime,\n  faSkullCrossbones,\n} from '@fortawesome/free-solid-svg-icons'\n\nimport {\n  purgeStore\n} from './lib'\n\nfunction SettingsButton(props){\n  const {show,setShow} = props;\n  return (\n    <Button\n      onClick={e => setShow(!show)}\n      title=\"user / weeklyHours\"\n    >\n      <FontAwesomeIcon icon={faBusinessTime}/> {props.user} / {props.weeklyHours} hrs\n    </Button>\n  )\n};\n\nfunction SettingsModal(props){\n  const {show,setShow} = props;\n  if (!show) return null;\n  return (\n    <Modal.Dialog>\n      <Modal.Header>\n        <Modal.Title>Settings</Modal.Title>\n        <Button\n          variant=\"danger\"\n          className='pull-right'\n          onClick={purgeStore}\n        >\n          <FontAwesomeIcon icon={faSkullCrossbones}/>\n          &nbsp;Delete Everything&nbsp;\n          <FontAwesomeIcon icon={faSkullCrossbones}/>\n        </Button>\n\n      </Modal.Header>\n\n      <Modal.Body>\n        <Form.Group>\n          <Form.Label>\n            User Name\n          </Form.Label>\n          <FormControl\n            name=\"user\"\n            value={props.user}\n            onChange={props.changeUser}\n          />\n        </Form.Group>\n          <Form.Group>\n            <Form.Label>\n              Weekly Hours\n            </Form.Label>\n          <InputGroup>\n            <InputGroup.Prepend>\n              <FormControl\n                name=\"weeklyHours\"\n                value={props.weeklyHours}\n                onChange={props.changeWeeklyHours}\n              />\n            </InputGroup.Prepend>\n            <InputGroup.Append>\n              <span className=\"input-group-text\">hrs</span>\n            </InputGroup.Append>\n          </InputGroup>\n        </Form.Group>\n      </Modal.Body>\n\n      <Modal.Footer>\n        <Button onClick={e => setShow(!show)} variant=\"primary\">Save changes</Button>\n      </Modal.Footer>\n    </Modal.Dialog>\n)};\n\nexport { SettingsButton, SettingsModal }\n","\nimport React from 'react';\n\nimport {\n  Button\n} from 'react-bootstrap';\n\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome'\n\nfunction IconButton({onClick,variant,key,icon}){\n  return (\n    <Button onClick={onClick} variant={variant} key={key}>\n      <FontAwesomeIcon icon={icon}/>\n    </Button>\n  );\n}\n\nexport {\n  IconButton\n};\n","\nimport React from 'react';\n\nimport {\n  Button,\n  FormControl,\n  InputGroup\n} from 'react-bootstrap';\n\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome'\n\nimport {\n  faCheck,\n  faPlus,\n  faSkullCrossbones\n} from '@fortawesome/free-solid-svg-icons'\n\nimport { IconButton } from './Gui'\n\nfunction Comment({value,changeComment}){\n  const [edit,setEdit] = React.useState(false)\n  return edit\n    ? <td width=\"99999999\">\n        <InputGroup>\n          <FormControl value={value} onChange={changeComment}/>\n          <InputGroup.Append>\n            <Button onClick={e => setEdit(false)}>\n              <FontAwesomeIcon icon={faCheck}/>\n            </Button>\n          </InputGroup.Append>\n        </InputGroup>\n      </td>\n    : <td width=\"99999999\" onClick={e => setEdit(true)}>{value}</td>\n}\n\nexport function CommentBar({\n  preset, comment, changeComment, setPreset, addPreset, delPreset, doDeletePreset\n}){ return (\n  <InputGroup>\n    <FormControl\n      placeholder=\"Comment\"\n      onChange={changeComment}\n      value={comment}\n    />\n    <InputGroup.Append>\n      <IconButton onClick={addPreset} icon={faPlus}/>\n      { preset.map( preset =>\n        <Button key={preset} onClick={setPreset(preset)}>{preset}</Button>\n      )}\n      <IconButton\n        variant={doDeletePreset ? 'danger' : 'warning' }\n        onClick={delPreset}\n        icon={faSkullCrossbones}\n      />\n    </InputGroup.Append>\n  </InputGroup>\n)}\n\nexport default Comment;\n","\nimport React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { renderTime } from './lib'\n\nexport default function Counter({active,start,toggle}){\n  const diff = new Date( Date.now() - start );\n  return (\n  <Button onClick={toggle} className={ active ? 'trig active' : 'trig' }>\n    { active ? renderTime(diff) : 'Start' }\n  </Button>\n)}\n","\nimport React from 'react';\n\nimport {\n  Button,\n} from 'react-bootstrap';\n\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome'\n\nimport {\n  faSkullCrossbones\n} from '@fortawesome/free-solid-svg-icons'\n\nimport {\n  recMatchesMode,\n  renderTime\n} from './lib'\n\n\nimport Comment from './Comment'\n\nexport default function({list,mode,deleteRecord,changeComment}){\n  return (\n  <table className=\"table table-striped\">\n    <tbody>\n      { list.filter( rec => recMatchesMode(rec,mode) ).map( (row,id) => {\n        const [date,time,comment] = row;\n        return <tr key={id}>\n          <td>\n            {(new Date(date).toLocaleDateString('de-DE'))}\n            &nbsp;\n            {(new Date(date).toLocaleTimeString('de-DE'))}\n          </td>\n          <td>{renderTime(new Date(time))}</td>\n          <Comment value={comment} changeComment={changeComment(id)}/>\n          <td width=\"1\">\n            <Button variant=\"danger\" onClick={deleteRecord(id)}>\n              <FontAwesomeIcon icon={faSkullCrossbones}/>\n            </Button>\n          </td>\n        </tr>;\n      })}\n    </tbody>\n  </table>\n)};\n","\nimport React from 'react';\nimport { Button, InputGroup } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faDownload } from '@fortawesome/free-solid-svg-icons'\nimport { renderTime, renderDate, renderHours, recMatchesMode, downloadName } from './lib'\nimport { SettingsButton } from './Settings'\n\nexport default function ListControls({\n  setState, changeUser, changeWeeklyHours, changeMode,\n  showSettings, user, mode, weeklyHours, total, list\n}){\n  const csv = React.useMemo( function(){\n    return `data:text/csv;base64,${btoa(\n        list.filter( rec => recMatchesMode(rec,mode) ).reduce((p,c) => {\n          return p += `${renderDate(c[0])},${renderHours(c[1])},${c[2]}\\n`;\n        },'')\n      )}`\n  },[mode,list]);\n  return (\n  <InputGroup className=\"list-controls\">\n    <InputGroup.Prepend>\n      <SettingsButton\n        show={showSettings}\n        setShow={value => setState({showSettings:value})}\n        user={user}\n        changeUser={changeUser}\n        weeklyHours={weeklyHours}\n        changeWeeklyHours={changeWeeklyHours}\n      />\n      { ['Total','Day','Month','Year'].map( m=>\n      <Button\n        variant={m === mode ? 'warning' : 'primary'}\n        key={m}\n        onClick={changeMode(m)}>\n          {m}\n      </Button> )}\n      <span className=\"input-group-text\">\n        {renderTime(new Date(total))}\n      </span>\n    </InputGroup.Prepend>\n    <InputGroup.Append>\n      <a className=\"btn btn-primary\" download={downloadName(user,mode)} href={csv}>\n      <FontAwesomeIcon icon={faDownload}/>\n      </a>\n    </InputGroup.Append>\n  </InputGroup>\n)}\n","\nconst defaults  = {\n  list:[],\n  preset:['Work','Prep','Meet'],\n  weeklyHours: 32,\n  user:'teacher',\n  delPreset:false,\n  mode:'Total',\n  showSettings:false,\n  counter: {\n    active: false,\n    start: null,\n    comment: '' }\n};\n\nexport default defaults;\n","\nimport React             from 'react';\nimport { Container }     from 'react-bootstrap';\nimport { SettingsModal } from './Settings'\nimport { CommentBar }    from './Comment'\nimport Counter           from './Counter'\nimport List              from './List'\nimport ListControls      from './ListControls'\nimport defaults          from './defaults'\nimport { recMatchesMode, loadStore, saveStore } from './lib'\n\nexport default class Overtime extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = loadStore(defaults);\n    if ( this.state.counter.active ) this.activate();\n  }\n  componentDidUpdate(){ saveStore(this.state) }\n  componentWillUnmount(){\n    this.commitCounterState(this.state);\n    clearInterval(this.timer);\n  }\n  commitCounterState = (counter)=> this.setState({counter});\n  push = (rec)=>  this.setState({list:[rec].concat(this.state.list)});\n  delete = delId => e => { this.setState({\n    list:[...(this.state.list.filter( (_,id)=> id !== delId ))]\n  })}\n  changeWeeklyHours = e => this.setState(\n    {weeklyHours:parseFloat(e.target.value)}\n  )\n  changeMode = mode => e => this.setState({mode});\n  changeUser = e => this.setState({user:e.target.value});\n  changeComment = (id) => e => {\n    const { list } = this.state;\n    list[id][2] = e.target.value;\n    this.setState({list});\n  }\n  toggle = e => this.setState(\n    this.state.active ? this.deactivate() : this.activate()\n  )\n  activate = e => {\n    this.timer = setInterval(t => {\n      this.forceUpdate();\n    },1000);\n    return { active:true, start:Date.now() };\n  }\n  deactivate = e => {\n    clearInterval(this.timer);\n    const diff = Date.now() - this.state.start;\n    this.push([Date.now(),diff,this.state.comment])\n    return { active:false, start:null, comment:'' };\n  }\n  change = e => this.setState({comment:e.target.value});\n  addPreset = e => this.setState({ preset: [this.state.comment].concat(this.state.preset) })\n  delPreset = e => this.setState({ delPreset: ! this.state.delPreset })\n  setPreset = key => e =>\n    ! this.state.delPreset\n    ? this.setState({ comment: key })\n    : this.setState({\n      delPreset:false,\n      preset:this.state.preset.filter( v => v !== key )\n  })\n  render(){\n    const {\n      showSettings, mode, list, start, active, preset, user, weeklyHours, comment\n    } = this.state;\n    const total = this.state.list.reduce( (total,rec) => {\n      return recMatchesMode(rec,mode) ? total += rec[1] : total;\n    },0);\n    if ( showSettings ) return (\n    <SettingsModal\n      show={showSettings} setShow={value => this.setState({showSettings:value})}\n      user={user} changeUser={this.changeUser}\n      weeklyHours={weeklyHours} changeWeeklyHours={this.changeWeeklyHours}\n    /> );\n    return (\n      <Container>\n        <Counter active={active} start={start} toggle={this.toggle}/>\n        <CommentBar\n          comment={comment} changeComment={this.change}\n          preset={preset} addPreset={this.addPreset}\n          setPreset={this.setPreset} delPreset={this.delPreset}\n          doDeletePreset={this.state.delPreset}\n        />\n        <ListControls list={list} total={total}\n          user={user} changeUser={this.changeUser}\n          mode={mode} changeMode={this.changeMode}\n          weeklyHours={weeklyHours} changeWeeklyHours={this.changeWeeklyHours}\n          setState={this.setState.bind(this)} showSettings={this.showSettings}\n        />\n        <List list={list} mode={mode}\n          changeComment={this.changeComment}\n          deleteRecord={this.delete}\n        />\n      </Container>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport './index.css';\nimport Overtime from './Overtime';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Overtime />, document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}