{"version":3,"sources":["lib.js","Comment.js","Settings.js","List.js","ListControls.js","MainControls.js","export.js","defaults.js","Overtime.js","serviceWorker.js","index.js"],"names":["localStorage","window","recMatchesMode","rec","mode","date","moment","lMode","toLowerCase","modeStart","startOf","valueOf","modeEnd","endOf","isBetween","renderDate","Date","toLocaleDateString","renderTotal","to","renderHours","utcOffset","format","downloadName","user","replace","purgeStore","e","confirm","removeItem","PresetList","preset","addPreset","delPresetId","React","useState","input","setInput","TextField","label","name","value","onChange","target","variant","fullWidth","InputProps","endAdornment","InputAdornment","position","IconButton","aria-label","onClick","edge","labelWidth","map","id","Button","key","className","color","useStyles","makeStyles","theme","flexGrow","padding","spacing","paper","display","margin","textAlign","palette","text","secondary","CommentBar","active","comment","setComment","swapComment","setPreset","classes","delPreset","doDeletePreset","Paper","Autocomplete","freeSolo","options","v","renderInput","params","menuButton","marginRight","title","SettingsModal","show","setShow","changeUser","weeklyHours","changeWeeklyHours","mailToAddress","setMailToAddress","setState","AppBar","Toolbar","showSettings","Typography","noValidate","autoComplete","root","width","backgroundColor","background","list","deleteRecord","editRecord","changeComment","Table","filter","row","time","utcTime","TableRow","TableCell","DateTimePicker","ampm","TimePicker","style","ListControls","changeMode","Tabs","m","Tab","MainControls","total","toggle","start","csv","useMemo","btoa","reduce","p","c","toCSV","mailto","encodeURIComponent","toMailURL","toNow","renderTime","href","download","defaults","Overtime","props","push","concat","state","delete","delId","_","parseFloat","deactivate","activate","setTimer","timer","setInterval","t","forceUpdate","now","clearInterval","diff","change","console","log","i","indexOf","JSON","parse","getItem","loadStore","this","setItem","stringify","bind","fixStore","List","Component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","updateLocale","relativeTime","future","past","s","mm","h","hh","d","dd","M","MM","y","yy","themeDark","createMuiTheme","type","themeLight","ReactDOM","render","libInstance","utils","MomentUtils","locale","children","light","setLight","ThemeProvider","CssBaseline","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.bb2363b4.chunk.js","sourcesContent":["\nimport moment from 'moment';\n\nconst { localStorage } = window;\n\nconst recMatchesMode = ( rec, mode ) => {\n  if ( mode === \"Total\" ) return true;\n  const date  = moment(rec[0]), lMode = mode.toLowerCase();\n  const modeStart = moment().startOf(lMode).valueOf();\n  const modeEnd   = moment().endOf(lMode).valueOf();\n  return date.isBetween(modeStart,modeEnd);\n}\n\nconst renderTime = (start)=>\n  moment(start).toNow(true)\n\nconst loadStore = (defaults) =>\n  JSON.parse(localStorage.getItem('overtime') || 'null') || defaults;\n\nconst saveStore = (state) =>\n  localStorage.setItem('overtime',JSON.stringify(state));\n\nconst renderDate = (date) =>\n  ( new Date(date) ).toLocaleDateString('de-DE')\n\nconst renderTotal = (date) =>\n  moment(date).to(moment(0),true)\n\nconst renderHours = (date) =>\n  moment(date).utcOffset(0).format('HH:mm')\n\nconst downloadName = (user,mode) =>\n  `${user.replace(/[^a-zA-Z]+/g,'_')}_${mode.toLowerCase()}.csv`\n\nconst purgeStore = e => {\n  if ( window.confirm(\"ARE YOU REALLY SURE?\") ){\n    localStorage.removeItem('overtime')\n  }}\n\nexport {\n  recMatchesMode,\n  renderTime,\n  renderDate,\n  renderHours,\n  loadStore,\n  saveStore,\n  renderTotal,\n  purgeStore,\n  downloadName\n};\n","\nimport React from 'react';\n\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Button from '@material-ui/core/Button';\nimport AddCircleOutline from '@material-ui/icons/AddCircleOutline';\nimport SwapHorizontalCircle from '@material-ui/icons/SwapHorizontalCircle';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport function PresetList({\n  preset, addPreset, delPresetId\n}){\n  const [input,setInput] = React.useState('');\n  return ( <>\n    <TextField\n      label=\"Add Preset\"\n      name=\"addComment\"\n      value={input}\n      onChange={e => setInput(e.target.value)}\n      variant=\"outlined\"\n      fullWidth\n      InputProps={{\n        endAdornment:<InputAdornment position=\"end\">\n          <IconButton\n            aria-label=\"add preset\"\n            onClick={e => addPreset(input)}\n            edge=\"end\"\n          >\n            <AddCircleOutline/>\n          </IconButton>\n        </InputAdornment>\n      }}\n      labelWidth={70}\n    />\n    { preset.map( (preset,id) =>\n      <Button\n        key={id} variant=\"contained\" className=\"preset\"\n        color=\"secondary\"\n        onClick={delPresetId(id)}\n      >\n        {preset}\n      </Button>\n    )}\n</> )}\n\nconst useStyles = makeStyles(theme => ({\n  input: {\n    flexGrow: 1,\n    padding: theme.spacing(1),\n  },\n  paper: {\n    display:'flex',\n    margin: theme.spacing(1),\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport function CommentBar({\n  active, comment, setComment, swapComment,\n  preset, setPreset, addPreset, delPreset, doDeletePreset\n}){\n  const classes = useStyles();\n  if(!active) return null;\n  return (\n    <Paper className={classes.paper}>\n      <Autocomplete\n        freeSolo\n        className={classes.input}\n        id=\"comment\"\n        options={preset}\n        value={comment}\n        onChange={(e,v)=> setComment(v)}\n        renderInput={ params =>\n        <TextField\n          onChange={e => setComment(e.target.value)}\n          {...params}\n      />}/>\n      <IconButton\n        variant=\"contained\"\n        aria-label=\"add preset\"\n        onClick={e => addPreset(comment) }\n        ><AddCircleOutline/>\n      </IconButton>\n      <IconButton\n        variant=\"contained\"\n        aria-label=\"add preset\"\n        onClick={swapComment}\n        ><SwapHorizontalCircle/>\n      </IconButton>\n    </Paper>\n)}\n","\nimport React from 'react';\n\nimport {\n  Button, TextField, Typography,\n  AppBar,Toolbar, IconButton, makeStyles\n} from '@material-ui/core';\n\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome'\n\nimport {\n  faBusinessTime,\n} from '@fortawesome/free-solid-svg-icons'\n\nimport {\n  purgeStore\n} from './lib'\n\nimport { PresetList } from './Comment'\n\nimport Close from '@material-ui/icons/Close';\nimport Error from '@material-ui/icons/Error';\n\nconst useStyles = makeStyles(theme => ({\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  paper: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n    flexGrow: 1,\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  }\n}));\n\nfunction SettingsButton(props){\n  const {show,setShow} = props;\n  return (\n    <Button\n      onClick={e => setShow(!show)}\n      title=\"user / weeklyHours\"\n    >\n      <FontAwesomeIcon icon={faBusinessTime}/> {props.user} / {props.weeklyHours} hrs\n    </Button>\n  )\n};\n\nfunction SettingsModal({\n  show, setShow, preset, addPreset, delPresetId, delPreset, user, changeUser,\n  weeklyHours, changeWeeklyHours, mailToAddress, setMailToAddress, setState\n}){\n  const classes = useStyles();\n  if (!show) return null;\n  return (\n    <>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\"\n            onClick={e => setState({showSettings:false}) }>\n            <Close/>\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Settings\n          </Typography>\n          <Button color=\"secondary\" variant=\"contained\" onClick={purgeStore}>\n            <Error/> Delete Everything <Error/>\n          </Button>\n        </Toolbar>\n      </AppBar>\n      <form className={classes.paper} noValidate autoComplete=\"off\">\n        <TextField fullWidth variant=\"outlined\" label=\"User\" name=\"user\" value={user} onChange={changeUser}/>\n        <TextField fullWidth variant=\"outlined\" label=\"eMail Target\" name=\"mailToAddress\" value={mailToAddress} onChange={setMailToAddress}/>\n        <TextField fullWidth variant=\"outlined\" label=\"Weekly Hours\" name=\"weeklyHours\" value={weeklyHours} onChange={changeWeeklyHours}/>\n        <PresetList\n          preset={preset}\n          addPreset={addPreset}\n          delPresetId={delPresetId}\n        />\n      </form>\n    </>\n)};\n\nexport { SettingsButton, SettingsModal }\n","\nimport React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport IconButton from '@material-ui/core/IconButton';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport HighlightOff from '@material-ui/icons/HighlightOff';\n\nimport { TextField, } from '@material-ui/core';\nimport { DateTimePicker, TimePicker } from '@material-ui/pickers';\n\nimport { recMatchesMode } from './lib'\nimport moment from 'moment'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function({list,preset,mode,deleteRecord,changeComment,editRecord}){\n  const classes = useStyles();\n  return (\n  <Table className={classes.root}><tbody> {\n    list.filter( rec => recMatchesMode(rec,mode) ).map( (row,id) => {\n      const [date,time,comment] = row;\n      let utcTime = moment(time).utcOffset(0)\n      return (\n      <TableRow key={id}>\n        <TableCell>\n          <DateTimePicker\n            className=\"list-date\"\n            format=\"DD.MM.YYYY HH:mm\"\n            value={date}\n            ampm={false}\n            onChange={ value => editRecord(id,[value.valueOf(),time,comment])}\n          />\n          <TimePicker\n            format=\"HH:mm\"\n            className=\"list-time\"\n            value={utcTime} ampm={false}\n            onChange={ value => editRecord(id,[date,value.valueOf(),comment])}\n          />\n        </TableCell>\n        <TableCell style={{flexGrow:'1'}}>\n          <Autocomplete freeSolo\n            className={classes.input}\n            id=\"comment\"\n            options={preset}\n            value={comment}\n            onChange={ (e,value) => editRecord(id,[date,time,value])}\n            renderInput={params =>\n            <TextField\n              onChange={ value => editRecord(id,[date,time,value])}\n              {...params}\n          />}/>\n        </TableCell>\n        <TableCell>\n          <IconButton onClick={deleteRecord(id)}>\n            <HighlightOff/>\n          </IconButton>\n        </TableCell>\n      </TableRow> )})}\n  </tbody></Table>\n)};\n","\nimport React from 'react';\nimport { Tab, Tabs } from '@material-ui/core';\n\nexport default function ListControls({changeMode, mode}){ return (\n  <Tabs variant=\"fullWidth\" value={mode} aria-label=\"select date range\">\n  {['Total','Day','Month','Year'].map( m =>\n    <Tab key={m} onClick={ changeMode(m) } label={m} value={m}/>)}\n  </Tabs>\n)}\n","\nimport React from 'react';\n\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  IconButton,\n  makeStyles\n} from '@material-ui/core';\n\nimport { renderTotal, renderTime, downloadName } from './lib'\n\nimport Menu              from '@material-ui/icons/Menu';\nimport CoudDownload      from '@material-ui/icons/CloudDownload';\nimport Mail              from '@material-ui/icons/Mail';\nimport PlayCircleOutline from '@material-ui/icons/PlayCircleOutline';\nimport HighlightOff      from '@material-ui/icons/HighlightOff';\n\nimport { toMailURL, toCSV } from './export'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function MainControls({\n  setState, changeUser, changeWeeklyHours, changeMode,\n  showSettings, user, mode, weeklyHours, total, list,\n  active, mailToAddress, toggle, start\n}){\n\n  const classes = useStyles();\n\n  const csv    = React.useMemo(\n    ()=> toCSV([ mode, list ]),\n    [ mode, list ]\n  );\n\n  const mailto = React.useMemo(\n    ()=> toMailURL( [ mode, list, user, mailToAddress ]),\n    [ mode, list, user, mailToAddress ]\n  );\n\n  return (\n  <AppBar position=\"static\">\n    <Toolbar>\n      <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\"\n        onClick={e => setState({showSettings:true}) }>\n        <Menu/>\n      </IconButton>\n      <Typography variant=\"h6\" className={classes.title}>\n        { active\n        ? `${renderTime(start)} / ${renderTotal(total)} `\n        : renderTotal(total) }\n      </Typography>\n      <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"mail\" onClick={toggle}>\n        { !active ? <PlayCircleOutline/> : <HighlightOff/> }\n      </IconButton>\n      <IconButton className={classes.menuButton} href={mailto} color=\"inherit\" aria-label=\"mail\">\n        <Mail/>\n      </IconButton>\n      <IconButton className={classes.menuButton} download={downloadName(user,mode)} href={csv} color=\"inherit\" aria-label=\"csv\">\n        <CoudDownload/>\n      </IconButton>\n    </Toolbar>\n  </AppBar>\n)}\n","\nimport {\n  renderDate, renderHours, recMatchesMode\n} from './lib'\n\nexport function toCSV([mode,list]){\n  return `data:text/csv;base64,${btoa(\n      list.filter( rec => recMatchesMode(rec,mode) ).reduce((p,c) => {\n        const [date,time,comment] = [renderDate(c[0]),renderHours(c[1]),c[2]];\n        return p += `${date},${time},${comment}\\n`;\n      },'')\n    )}`;\n};\n\nexport function toMailURL([mode,list,user,mailToAddress]){\n  const total = list.reduce( (total,rec) => {\n    return recMatchesMode(rec,mode) ? total += rec[1] : total;\n  },0);\n  return (\n    `mailto:?to=${mailToAddress}` +\n    `&subject=${encodeURIComponent(`Overtime ${user}`)}` +\n    `&body=${encodeURIComponent(\n      \"Hi,\\n\" +\n      \"this is my overtime report,\\n\\n\" +\n      \"Best regards,\\n\" +\n      `${user}\\n\\n` +\n      \"------------------------------------------------\\n\" +\n      list.filter( rec => recMatchesMode(rec,mode) ).reduce((p,c) => {\n        return p += `${renderDate(c[0])}\\t${renderHours(c[1])}\\t${c[2]}\\n`;\n      },'') +\n      \"------------------------------------------------\\n\" +\n      `Total: ${renderHours(total)} hours\\n` +\n      \"------------------------------------------------\\n\"\n    )}`\n)};\n","\nconst defaults  = {\n  list:[],\n  preset:['Work','Prep','Meet'],\n  weeklyHours: 32,\n  user:'teacher',\n  mode:'Total',\n  showSettings:false,\n  active: false,\n  start: null,\n  comment: '',\n  mailToAddress:'boss@digitalcareerinstitute.org'\n};\n\nexport default defaults;\n","\nimport React             from 'react';\nimport { SettingsModal } from './Settings'\nimport { CommentBar }    from './Comment'\nimport List              from './List'\nimport ListControls      from './ListControls'\nimport MainControls      from './MainControls'\nimport defaults          from './defaults'\nimport { recMatchesMode, loadStore, saveStore } from './lib'\n\nexport default class Overtime extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = loadStore(defaults);\n    if ( this.state.active ) this.setTimer()\n  }\n  componentDidUpdate(){\n    saveStore(this.state)\n  }\n  componentWillUnmount(){\n    clearInterval(this.timer);\n  }\n\n  push = (rec)=>\n    this.setState({list:[rec].concat(this.state.list)});\n\n  delete = delId => e => { this.setState({\n    list:[...(this.state.list.filter( (_,id)=> id !== delId ))]\n  })}\n\n  changeWeeklyHours = e => this.setState(\n    {weeklyHours:parseFloat(e.target.value)}\n  )\n\n  changeMode = mode => e => this.setState({mode});\n\n  changeUser = e => this.setState({user:e.target.value});\n\n  setComment = comment => this.setState({comment});\n\n  changeComment = (id) => e => {\n    const { list } = this.state;\n    list[id][2] = e.target.value;\n    this.setState({list});\n  }\n\n  editRecord = (id, value)=> {\n    const { list } = this.state;\n    list[id] = value;\n    this.setState({list});\n  }\n\n  swapComment = e => {\n    if ( ! this.state.active ) return;\n    this.deactivate();\n    this.setState(this.activate());\n  }\n\n  setTimer = e => this.timer = setInterval(t => { this.forceUpdate() },1000);\n\n  toggle = e => this.setState(\n    this.state.active ? this.deactivate() : this.activate()\n  )\n\n  activate = e => {\n    this.setTimer()\n    return { active:true, start: Date.now() };\n  }\n\n  deactivate = e => {\n    clearInterval(this.timer);\n    const { start, comment } = this.state;\n    const diff = Date.now() - start;\n    this.push([start,diff,comment])\n    return { active:false, start:Date.now(), comment:'' };\n  }\n\n  change = e => this.setState({comment:e.target.value});\n\n  addPreset = value => this.setState({ preset: [value].concat(this.state.preset) })\n\n  delPreset = e => this.setState({ delPreset: ! this.state.delPreset })\n\n  delPresetId = id => e => {\n    console.log(id);\n    this.setState({\n      delPreset:false, preset: this.state.preset.filter( (_,i) => i !== id )\n    })}\n\n  setMailToAddress = e => this.setState({mailToAddress:e.target.value})\n\n  setPreset = key => e =>\n    ! this.state.delPreset\n    ? this.setState({ comment: key })\n    : this.delPresetId(this.state.preset.indexOf(key))(e)\n\n  render(){\n\n    const {\n      showSettings, mode, list, start, active, preset, user,\n      weeklyHours, comment, mailToAddress\n    } = this.state;\n\n    const total = list.reduce( (total,rec) => {\n      return recMatchesMode(rec,mode) ? total += rec[1] : total;\n    },0);\n\n    if ( showSettings ) return (\n    <SettingsModal\n      setState={this.setState.bind(this)}\n      show={showSettings} setShow={value => this.setState({showSettings:value})}\n      user={user} changeUser={this.changeUser}\n      weeklyHours={weeklyHours} changeWeeklyHours={this.changeWeeklyHours}\n      preset={preset} addPreset={this.addPreset}\n      delPreset={this.delPreset} delPresetId={this.delPresetId}\n      mailToAddress={mailToAddress} setMailToAddress={this.setMailToAddress}\n      fixStore={this.fixStore}\n    /> );\n\n    return (\n      <>\n        <MainControls\n          {...{list,total,user,mode,weeklyHours,mailToAddress,start,active}}\n          toggle={this.toggle}\n          changeUser={this.changeUser}\n          changeMode={this.changeMode}\n          changeWeeklyHours={this.changeWeeklyHours}\n          setState={this.setState.bind(this)} showSettings={this.showSettings}\n        />\n        <CommentBar {...{active, comment, preset}}\n          setComment={this.setComment}\n          addPreset={this.addPreset}\n          swapComment={this.swapComment}\n          setPreset={this.setPreset} delPreset={this.delPreset}\n          doDeletePreset={this.state.delPreset}\n        />\n        <ListControls list={list} total={total}\n          user={user} changeUser={this.changeUser}\n          mode={mode} changeMode={this.changeMode}\n          weeklyHours={weeklyHours} changeWeeklyHours={this.changeWeeklyHours}\n          setState={this.setState.bind(this)} showSettings={this.showSettings}\n        />\n        <List {...{list,mode,preset}}\n          changeComment={this.changeComment}\n          deleteRecord={this.delete}\n          editRecord={this.editRecord}\n        />\n      </>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport './index.css';\nimport Overtime from './Overtime';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport MomentUtils from '@date-io/moment'\n\nimport moment from 'moment';\nimport 'moment/locale/de';\nmoment.updateLocale('de',{ relativeTime : {\n  future : '%s',\n  past : '%s',\n  s : '>1m',\n  m : '1m',\n  mm : '%dm',\n  h : '1h',\n  hh : '%dh',\n  d : '1d',\n  dd : '%dd',\n  M : '1m',\n  MM : '%dm',\n  y : '1y',\nyy : '%dy'\n}})\n\nconst themeDark = createMuiTheme({\n  palette: { type: 'dark' },\n});\n\nconst themeLight = createMuiTheme({\n  palette: { type: 'light' },\n});\n\nfunction ThemeSwitcher({children}){\n  const [light,setLight] = React.useState(false)\n  window.setLight = setLight\n  return (\n    <ThemeProvider theme={light ? themeLight : themeDark}>\n      {children}\n    </ThemeProvider>\n  );\n}\n\nReactDOM.render(\n  ( <MuiPickersUtilsProvider libInstance={moment} utils={MomentUtils} locale={'de'}>\n      <ThemeSwitcher>\n        <CssBaseline />\n        <Overtime/>\n      </ThemeSwitcher>\n    </MuiPickersUtilsProvider>\n  ), document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}